{"version":3,"sources":["logo.svg","forms/ErrorMessage.jsx","forms/inputs/InputText.jsx","components/FullSpinner.jsx","components/InlineSpinner.jsx","modals/FormModal.jsx","libs/object-path.js","flows/ResourceFlow/actions.js","exceptions.js","settings.js","apis/main.js","libs/object-path-immutable.js","flows/Flow/flow.js","flows/ResourceFlow/flow.js","flows/AuthFlow/actions.js","forms/FormGroup.jsx","forms/LabelledGroup.jsx","modals/UserModal.jsx","contexts/ResourceModalContext.jsx","modals/keymaps.js","contexts/ModalsContext.jsx","components/AddButton.jsx","modals/index.jsx","components/Nav.jsx","components/Footer.jsx","views/Home.jsx","App.js","serviceWorker.js","flows/index.js","flows/UserFlow.js","index.js"],"names":["module","exports","connect","name","skipTouch","formik","error","errors","touch","getIn","touched","className","classNames","InputText","renderField","props","placeholder","isSubmitting","innerRef","password","disabled","submitOnChnage","prefix","notErrorMessage","others","extraCalassNames","split","type","value","values","this","InputGroup","InputGroupAddon","addonType","Component","FullSpinner","sizeUnit","size","color","React","InlineSpinner","withModal","focus","isModalOpen","firstInput","current","timerId","setTimeout","onClose","toggleModal","onSubmit","children","clearTimeout","prevProps","submitted","submitting","closeModal","onSubmitted","loading","modalLevel","dirty","isOpen","toggle","fade","ModalBody","ModalHeader","working","Form","ModalFooter","Button","onClick","toStr","Object","prototype","toString","hasOwnProperty","obj","prop","call","isEmpty","isArray","length","i","Array","getKey","key","startsWith","endsWith","innerKey","slice","intKey","parseInt","factory","options","objectPath","keys","reduce","proxy","bind","hasShallowProperty","includeInheritedProps","getShallowProperty","set","path","doNotReplace","map","currentPath","currentValue","has","j","ensureExists","insert","at","arr","get","splice","empty","isBoolean","isObject","push","apply","arguments","coalesce","paths","defaultValue","len","nextObj","del","mod","create","withInheritedProps","SEARCH","createResource","resource","body","console","log","action","updateResource","id","ValidationException","UnknownException","description","AuthorizationException","settings","assign","API_URL","process","SENTRY_DSN","getTokenHeaders","token","fetchMain","url","method","status","a","extraHeaders","params","attributes","some","attr","slug","config","headers","JSON","stringify","filter","k","encodeURIComponent","join","fetch","response","text","results","parse","getResource","fetchResources","filters","patchResource","deleteResource","_hasOwnProperty","isNumber","isString","assignToObj","target","source","clone","createIfEmpty","assumeArray","deepMerge","dest","src","isPlainObject","merged","changeImmutable","changeCallback","api","clonedObj","finalPath","updater","concat","first","Error","undefined","immutable","objectPathImmutable","committed","transaction","args","getActionStepType","step","toUpperCase","Flow","rootPath","actionInitialState","done","abort","requested","failed","completed","aborted","actions","initialState","isFlowAction","resolvePattern","resolvePatternLatest","stepAction","onStart","onError","onDone","onAbort","onFinish","reduceStart","reduceError","reduceDone","reduceAbort","reduceFinish","reduceActionDone","reduceAction","reducer","sagas","saga","runAction","indexOf","answer","extra","actionInfo","select","state","flowState","Sentry","info","run","put","cancelled","loop","moment","valueOf","newState","actionPath","merge","all","takeLatest","takeEvery","ResourceFlow","useParser","isTokenForRefresh","timestamp","isBefore","add","reduceClean","reduceExists","parseResource","reduceNew","reduceDelete","reduceFetch","result","elem","reduceSearch","e","count","total_count","reduceSelect","actual","defaultObj","clearSearch","actionPathGet","actionPathSelect","actionPathClean","actionPathCreate","actionPathClone","actionPathUpdate","actionPathPatch","actionPathDelete","actionPathFetch","actionPathSearch","runGet","runSelect","runClean","runCreate","runClone","runUpdate","runPatch","runDelete","runFetch","tempFilters","limit","runSearch","q","offset","o","order","onErrorGet","onErrorSelect","onErrorClean","onErrorCreate","onErrorClone","onErrorUpdate","onErrorPatch","onErrorDelete","onErrorFetch","onErrorSearch","onAbortGet","onAbortSelect","onAbortClean","onAbortCreate","onAbortClone","onAbortUpdate","onAbortPatch","onAbortDelete","onAbortFetch","onAbortSearch","onFinishGet","onFinishSelect","onFinishClean","onFinishCreate","onFinishClone","onFinishUpdate","onFinishPatch","onFinishDelete","onFinishFetch","onFinishSearch","onDoneGet","onDoneSelect","onDoneClean","onDoneCreate","onDoneClone","onDoneUpdate","onDonePatch","onDoneDelete","onDoneFetch","onDoneSearch","reduceStartGet","reduceStartSelect","reduceStartClean","reduceStartCreate","reduceStartClone","reduceStartUpdate","reduceStartPatch","reduceStartDelete","reduceStartFetch","reduceStartSearch","reduceErrorGet","reduceErrorSelect","reduceErrorClean","reduceErrorCreate","reduceErrorClone","reduceErrorUpdate","reduceErrorPatch","reduceErrorDelete","reduceErrorFetch","reduceErrorSearch","reduceDoneGet","reduceDoneSelect","reduceDoneClean","reduceDoneCreate","reduceDoneClone","reduceDoneUpdate","reduceDonePatch","reduceDoneDelete","reduceDoneFetch","reduceDoneSearch","reduceAbortGet","reduceAbortSelect","reduceAbortClean","reduceAbortCreate","reduceAbortClone","reduceAbortUpdate","reduceAbortPatch","reduceAbortDelete","reduceAbortFetch","reduceAbortSearch","reduceFinishGet","reduceFinishSelect","reduceFinishClean","reduceFinishCreate","reduceFinishClone","reduceFinishUpdate","reduceFinishPatch","reduceFinishDelete","reduceFinishFetch","reduceFinishSearch","reduceActionDoneSelect","reduceActionDoneGet","reduceActionDoneClean","reduceActionDoneCreate","reduceActionDoneClone","reduceActionDoneUpdate","reduceActionDonePatch","reduceActionDoneDelete","reduceActionDoneFetch","reduceActionDoneSearch","st","auth","accessToken","tokenTimestamp","take","refreshAction","FormGroup","LabelledGroup","htmlFor","UserModal","createRef","Row","Col","withResourceModal","mapPropsToValues","validationSchema","WrappedComponent","getActionName","operation","resetForm","modalId","handleSubmit","objLoading","setSubmitting","setErrors","serverErrors","openData","withFormik","withFormModal","username","email","confirmPassword","Yup","shape","first_name","required","label","min","test","parent","dispatch","configure","keyMap","users","sequences","modalClass","ModalsContext","createContext","openModal","data","level","ModalsProvider","setCloseModal","setState","prevState","setOpenModal","getKeyMap","getHandlers","handlers","newKeyMap","newHandlers","Provider","allowChanges","Consumer","AddButton","handleClick","initialValues","Children","child","cloneElement","title","withModals","Modals","Modal","Nav","class","style","height","href","Footer","backgroundColor","Home","App","logo","alt","Boolean","window","location","hostname","match","flows","mainReducer","combineReducers","flow","sagasMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","forEach","dsn","SETNRY_DSN","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c2c0fba2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Fragment } from 'react';\r\nimport { connect, getIn } from 'formik';\r\nimport classNames from 'classnames'\r\n\r\nconst ErrorMessage = ({name, skipTouch, formik}) => {\r\n    // No debería hacer getIn porque nuestro servidor devuelve un string\r\n    // como key del path ejemplo codes[0].value[0] y no devuelve\r\n    // la estructura anidada correspondiente con un diccionario con un array \r\n    // adentro etc \r\n    const error = formik.errors? formik.errors[name] : \"\";\r\n    const touch = getIn(formik.touched, name);\r\n    if (error && (touch || skipTouch)) {\r\n        return (\r\n            <Fragment> \r\n                <div className={classNames(\"no-form-control\", { 'is-invalid': error})}> </div>\r\n                <div className=\"invalid-feedback\">{error}</div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    return null\r\n};\r\n\r\nexport default connect(ErrorMessage);","import React, { Fragment, Component } from 'react';\r\nimport { connect, Field, getIn } from 'formik';\r\nimport ErrorMessage from '../ErrorMessage'\r\nimport classNames from 'classnames'\r\nimport {InputGroup, InputGroupAddon} from 'reactstrap';\r\n\r\nclass InputText extends Component {\r\n    renderField = () => {\r\n        const {formik, name, isSubmitting, placeholder, innerRef, password,\r\n             disabled, submitOnChnage, prefix, notErrorMessage, className, ...others} = this.props\r\n        const extraCalassNames = className ? className.split(' '): []\r\n        return <Field  \r\n            type={password?\"password\":\"text\"}\r\n            name={name} \r\n            placeholder={placeholder}\r\n            disabled={disabled || formik.isSubmitting}\r\n            innerRef={innerRef}\r\n            className={classNames(\"form-control\", ...extraCalassNames, { 'is-invalid': getIn(formik.errors, name)})}\r\n            value={getIn(formik.values, name) || \"\"}\r\n            {...others}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        const {name, prefix, notErrorMessage} = this.props\r\n        return (\r\n            <Fragment>\r\n                {prefix ? \r\n                    <InputGroup>\r\n                        {this.renderField()}\r\n                        <InputGroupAddon addonType=\"append\">{prefix}</InputGroupAddon>\r\n                        <ErrorMessage name={name} />\r\n                    </InputGroup>\r\n                    : <Fragment>\r\n                        {this.renderField()}\r\n                        {!notErrorMessage && \r\n                            <ErrorMessage name={name}/>\r\n                        }\r\n                    </Fragment>\r\n                    \r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect(InputText);","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n\r\nclass FullSpinner extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='sweet-loading'>\r\n                <ClipLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={60}\r\n                    color={'#FF586B'}\r\n                />\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default FullSpinner;","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n\r\nclass InlineSpinner extends React.Component {\r\n    render() {\r\n        return (\r\n            <ClipLoader sizeUnit={\"px\"} size={this.props.size} color={'#780206'} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InlineSpinner;","import React, { Component, Fragment } from 'react';\r\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form } from 'reactstrap';\r\nimport FullSpinner from \"../components/FullSpinner\";\r\nimport InlineSpinner from \"../components/InlineSpinner\";\r\nimport { Modal } from 'reactstrap';\r\nimport { withModal } from '../contexts/ModalsContext.jsx'\r\nimport ErrorMessage from '../forms/ErrorMessage';\r\nimport axios from 'axios';\r\n\r\nclass FormModal extends Component {\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timerId);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { submitted, submitting, isModalOpen, closeModal } = this.props;\r\n      if (prevProps.submitting && submitting === false) {\r\n        this.props.onSubmitted()\r\n      }\r\n      if (!prevProps.submitted && submitted === true) {\r\n        closeModal()\r\n      }\r\n      if (!prevProps.isModalOpen && isModalOpen) {\r\n        this.timerId = setTimeout(this.focus, 500);\r\n      }\r\n    }\r\n\r\n    focus = () => {\r\n      const { isModalOpen, firstInput } = this.props;\r\n      if (firstInput && firstInput.current) {\r\n        firstInput.current.focus()\r\n      } else if (isModalOpen){\r\n        this.timerId = setTimeout(this.focus, 500); // (*)\r\n      }\r\n    }\r\n\r\n    onClose = () => {\r\n      this.props.toggleModal()\r\n      this.props.onClose()\r\n    }\r\n\r\n    onSubmit = () => {\r\n      const { onSubmit, children } = this.props\r\n      // axios.post('http://localhost:3001/users', children.props.values)\r\n      // .then(response => {\r\n      //     console.log('Respuesta', response)\r\n      // }).catch(e => {\r\n      //     console.log(e);\r\n      // });\r\n      onSubmit()\r\n    }\r\n\r\n    render () {\r\n      const {isModalOpen, toggleModal, children, onSubmit, name, loading, modalLevel, dirty} = this.props;\r\n      return (\r\n        <Modal\r\n          size=\"lg\"\r\n          isOpen={isModalOpen}\r\n          toggle={toggleModal}\r\n          fade={false}\r\n          className={modalLevel <= 4 ? `p-${modalLevel}`: \"p-5\"}\r\n          >\r\n            {loading? \r\n              <ModalBody className=\"p-5\"><FullSpinner/></ModalBody>:\r\n              <Fragment>\r\n                <ModalHeader toggle={toggleModal}>{name} \r\n                     \r\n                     <ul className=\"nav list-inline ml-auto float-right\">\r\n                      { dirty && (\r\n                        <li className=\"list-inline-item pl-2 right\"><p className=\"mb-0\"><small><em>({'cambios sin guardar'})</em></small></p></li>\r\n                      )}\r\n                      { this.props.working > 0 && (\r\n                          <li className=\"list-inline-item pl-2\"> <InlineSpinner size={14} /> </li>\r\n                      )}\r\n                    </ul>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        {children}\r\n                        <input type=\"submit\" className=\"hidden\"/>\r\n                        <ErrorMessage name=\"non_field_errors\" skipTouch={true} />\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\"\r\n                            onClick={this.onSubmit}>{'Guardar'}</Button>{' '}\r\n                    <Button color=\"warning\" className=\"text-white\" onClick={this.onClose}>{'Cancelar'}</Button>\r\n                </ModalFooter>\r\n              </Fragment>\r\n            }\r\n        </Modal>\r\n      );\r\n    }\r\n}\r\n\r\nexport default withModal(FormModal);\r\n","var toStr = Object.prototype.toString;\r\nfunction hasOwnProperty(obj, prop) {\r\n  if(obj == null) {\r\n    return false\r\n  }\r\n  //to handle objects with null prototypes (too edge case?)\r\n  return Object.prototype.hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nfunction isEmpty(value){\r\n  if (!value) {\r\n    return true;\r\n  }\r\n  if (isArray(value) && value.length === 0) {\r\n      return true;\r\n  } else if (typeof value !== 'string') {\r\n      for (var i in value) {\r\n          if (hasOwnProperty(value, i)) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction toString(type){\r\n  return toStr.call(type);\r\n}\r\n\r\nfunction isObject(obj){\r\n  return typeof obj === 'object' && toString(obj) === \"[object Object]\";\r\n}\r\n\r\nvar isArray = Array.isArray || function(obj){\r\n  /*istanbul ignore next:cant test*/\r\n  return toStr.call(obj) === '[object Array]';\r\n}\r\n\r\nfunction isBoolean(obj){\r\n  return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\r\n}\r\n\r\nfunction getKey(key){\r\n  if (key.startsWith('[') && key.endsWith(']')) {\r\n    const innerKey = key.slice(1,key.length - 1)\r\n    var intKey = parseInt(innerKey);\r\n    if (intKey.toString() === innerKey) {\r\n      return intKey;\r\n    }\r\n  }\r\n  return key;\r\n}\r\n\r\nfunction factory(options) {\r\n  options = options || {}\r\n\r\n  var objectPath = function(obj) {\r\n    return Object.keys(objectPath).reduce(function(proxy, prop) {\r\n      if(prop === 'create') {\r\n        return proxy;\r\n      }\r\n\r\n      /*istanbul ignore else*/\r\n      if (typeof objectPath[prop] === 'function') {\r\n        proxy[prop] = objectPath[prop].bind(objectPath, obj);\r\n      }\r\n\r\n      return proxy;\r\n    }, {});\r\n  };\r\n\r\n  function hasShallowProperty(obj, prop) {\r\n    return (options.includeInheritedProps || (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop))\r\n  }\r\n\r\n  function getShallowProperty(obj, prop) {\r\n    if (hasShallowProperty(obj, prop)) {\r\n      return obj[prop];\r\n    }\r\n  }\r\n\r\n  function set(obj, path, value, doNotReplace){\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    }\r\n    if (!path || path.length === 0) {\r\n      return obj;\r\n    }\r\n    if (typeof path === 'string') {\r\n      return set(obj, path.split('.').map(getKey), value, doNotReplace);\r\n    }\r\n    var currentPath = path[0];\r\n    var currentValue = getShallowProperty(obj, currentPath);\r\n    if (path.length === 1) {\r\n      if (currentValue === void 0 || !doNotReplace) {\r\n        obj[currentPath] = value;\r\n      }\r\n      return currentValue;\r\n    }\r\n\r\n    if (currentValue === void 0) {\r\n      //check if we assume an array\r\n      if(typeof path[1] === 'number') {\r\n        obj[currentPath] = [];\r\n      } else {\r\n        obj[currentPath] = {};\r\n      }\r\n    }\r\n\r\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\r\n  }\r\n\r\n  objectPath.has = function (obj, path) {\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    } else if (typeof path === 'string') {\r\n      path = path.split('.');\r\n    }\r\n\r\n    if (!path || path.length === 0) {\r\n      return !!obj;\r\n    }\r\n\r\n    for (var i = 0; i < path.length; i++) {\r\n      var j = getKey(path[i]);\r\n\r\n      if((typeof j === 'number' && isArray(obj) && j < obj.length) ||\r\n        (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\r\n        obj = obj[j];\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  objectPath.ensureExists = function (obj, path, value){\r\n    return set(obj, path, value, true);\r\n  };\r\n\r\n  objectPath.set = function (obj, path, value, doNotReplace){\r\n    return set(obj, path, value, doNotReplace);\r\n  };\r\n\r\n  objectPath.insert = function (obj, path, value, at){\r\n    var arr = objectPath.get(obj, path);\r\n    at = ~~at;\r\n    if (!isArray(arr)) {\r\n      arr = [];\r\n      objectPath.set(obj, path, arr);\r\n    }\r\n    arr.splice(at, 0, value);\r\n  };\r\n\r\n  objectPath.empty = function(obj, path) {\r\n    if (isEmpty(path)) {\r\n      return void 0;\r\n    }\r\n    if (obj == null) {\r\n      return void 0;\r\n    }\r\n\r\n    var value, i;\r\n    if (!(value = objectPath.get(obj, path))) {\r\n      return void 0;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      return objectPath.set(obj, path, '');\r\n    } else if (isBoolean(value)) {\r\n      return objectPath.set(obj, path, false);\r\n    } else if (typeof value === 'number') {\r\n      return objectPath.set(obj, path, 0);\r\n    } else if (isArray(value)) {\r\n      value.length = 0;\r\n    } else if (isObject(value)) {\r\n      for (i in value) {\r\n        if (hasShallowProperty(value, i)) {\r\n          delete value[i];\r\n        }\r\n      }\r\n    } else {\r\n      return objectPath.set(obj, path, null);\r\n    }\r\n  };\r\n\r\n  objectPath.push = function (obj, path /*, values */){\r\n    var arr = objectPath.get(obj, path);\r\n    if (!isArray(arr)) {\r\n      arr = [];\r\n      objectPath.set(obj, path, arr);\r\n    }\r\n\r\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\r\n  };\r\n\r\n  objectPath.coalesce = function (obj, paths, defaultValue) {\r\n    var value;\r\n\r\n    for (var i = 0, len = paths.length; i < len; i++) {\r\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\r\n        return value;\r\n      }\r\n    }\r\n\r\n    return defaultValue;\r\n  };\r\n\r\n  objectPath.get = function (obj, path, defaultValue){\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    }\r\n    if (!path || path.length === 0) {\r\n      return obj;\r\n    }\r\n    if (obj == null) {\r\n      return defaultValue;\r\n    }\r\n    if (typeof path === 'string') {\r\n      return objectPath.get(obj, path.split('.'), defaultValue);\r\n    }\r\n\r\n    var currentPath = getKey(path[0]);\r\n    var nextObj = getShallowProperty(obj, currentPath)\r\n    if (nextObj === void 0) {\r\n      return defaultValue;\r\n    }\r\n\r\n    if (path.length === 1) {\r\n      return nextObj;\r\n    }\r\n\r\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\r\n  };\r\n\r\n  objectPath.del = function del(obj, path) {\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    }\r\n\r\n    if (obj == null) {\r\n      return obj;\r\n    }\r\n\r\n    if (isEmpty(path)) {\r\n      return obj;\r\n    }\r\n    if(typeof path === 'string') {\r\n      return objectPath.del(obj, path.split('.'));\r\n    }\r\n\r\n    var currentPath = getKey(path[0]);\r\n    if (!hasShallowProperty(obj, currentPath)) {\r\n      return obj;\r\n    }\r\n\r\n    if(path.length === 1) {\r\n      if (isArray(obj)) {\r\n        obj.splice(currentPath, 1);\r\n      } else {\r\n        delete obj[currentPath];\r\n      }\r\n    } else {\r\n      return objectPath.del(obj[currentPath], path.slice(1));\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  return objectPath;\r\n}\r\n\r\nvar mod = factory();\r\nmod.create = factory;\r\nmod.withInheritedProps = factory({includeInheritedProps: true})\r\nexport default mod\r\n","export const GET = 'GET'\r\nexport const CLEAN = 'CLEAN'\r\nexport const CREATE = 'CREATE'\r\nexport const CLONE = 'CLONE'\r\nexport const UPDATE = 'UPDATE'\r\nexport const PATCH = 'PATCH'\r\nexport const DELETE = 'DELETE'\r\nexport const FETCH = 'FETCH'\r\nexport const SEARCH = 'SEARCH'\r\nexport const FILTER = 'FILTER'\r\nexport const SELECT = 'SELECT'\r\n\r\nexport function requestResource(resource, id, path, defaultObj) {\r\n    return {\r\n        type: GET,\r\n        action: GET,\r\n        resource,\r\n        id,\r\n        path,\r\n        defaultObj,\r\n    }\r\n}\r\n\r\nexport function selectResource(resource, id, path, defaultObj) {\r\n    return {\r\n        type: SELECT,\r\n        action: SELECT,\r\n        resource,\r\n        id,\r\n        path,\r\n        defaultObj,\r\n    }\r\n}\r\n\r\nexport function cleanResource(resource, path) {\r\n    return {\r\n        type: CLEAN,\r\n        action: CLEAN,\r\n        resource,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function createResource(resource, body, path) {\r\n    console.log(resource, body, path)\r\n    return {\r\n        type: CREATE,\r\n        action: CREATE,\r\n        resource,\r\n        body,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function cloneResource(resource, body, id) {\r\n    return {\r\n        type: CLONE,\r\n        action: CLONE,\r\n        resource,\r\n        body,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function updateResource(resource, id, body) {\r\n    return {\r\n        type: UPDATE,\r\n        action: UPDATE,\r\n        resource,\r\n        id,\r\n        body\r\n    }\r\n}\r\n\r\nexport function patchResource(resource, id, body) {\r\n    return {\r\n        type: PATCH,\r\n        action: PATCH,\r\n        resource,\r\n        id,\r\n        body\r\n    }\r\n}\r\n\r\nexport function deleteResource(resource, id) {\r\n    return {\r\n        type: DELETE,\r\n        action: DELETE,\r\n        resource,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function searchResources(resource, id, q, offset, limit, order, tempFilters={}) {\r\n    return {\r\n        type: SEARCH,\r\n        action: SEARCH,\r\n        resource,\r\n        id,\r\n        q,\r\n        offset,\r\n        limit,\r\n        order,\r\n        tempFilters\r\n    }\r\n}\r\n\r\nexport function fetchResources(resource, tempFilters={}) {\r\n    return {\r\n        type: FETCH,\r\n        action: FETCH,\r\n        resource,\r\n        tempFilters\r\n    }\r\n}\r\n\r\nexport function updateFilters(resource, id, newFilters) {\r\n    return {\r\n        type: FILTER,\r\n        action: FILTER,\r\n        resource,\r\n        id,\r\n        newFilters,\r\n    }\r\n}\r\n","export function ValidationException(errors) {\r\n   this.errors = errors;\r\n   this.name = 'ValidationException';\r\n}\r\n\r\nexport function UnknownException(description) {\r\n    this.description = description;\r\n    this.name = \"UnknownException\";\r\n}\r\n\r\nexport function AuthorizationException(description) {\r\n    this.description = description;\r\n    this.name = \"AuthorizationException\"\r\n}","// import dev from './settings/dev'\r\n// import prod from './settings/prod'\r\n\r\nconst dev = {\r\n    API_URL: process.env.REACT_APP_API_URL,\r\n    SENTRY_DSN: \"\"\r\n}\r\n\r\n//const settings = Object.assign({}, dev, (process.env.NODE_ENV === 'production' || !__DEV__)?prod:dev)\r\nconst settings = Object.assign({}, dev)\r\n\r\nexport default settings\r\n","\r\nimport { ValidationException, UnknownException, AuthorizationException \r\n       } from '../exceptions'\r\nimport settings from '../settings'\r\n\r\nconst getTokenHeaders = (token) => {\r\n    return {\r\n        \"Authorization\": \"Bearer \" + token\r\n    }\r\n}\r\n\r\nconst fetchMain = async (url, method, status, extraHeaders={}, body={},  params={} ) => {\r\n    let hasFile = body.attributes && body.attributes.some(a => a.attr.slug === \"archivo\")\r\n    if (!hasFile) {\r\n        extraHeaders = Object.assign({}, extraHeaders, {\r\n            \"Content-Type\": \"application/json\",\r\n        })\r\n    }\r\n    const config = {\r\n        method: method,\r\n        headers: Object.assign({\"Accept\": \"application/json\"}, extraHeaders),\r\n    }\r\n    if (body && Object.keys(body).length > 0) {\r\n        config.body = JSON.stringify(body)\r\n    }\r\n    if (params && Object.keys(params).length > 0) {\r\n        url = url + \"?\" + Object.keys(params).filter(k=> params[k]).map(\r\n                k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]) \r\n            ).join('&');\r\n    }\r\n    const response = await fetch(url, config)\r\n    let results = await response.text();\r\n    try {\r\n         results = JSON.parse(results)\r\n    } catch (error) { }\r\n    if (response.status === 500) {\r\n        throw new UnknownException(results)\r\n    } else if (response.status === 400) {\r\n        throw new ValidationException(results)\r\n    } else if (response.status === 401) {\r\n        throw new AuthorizationException(results)\r\n    } else if (response.status !== status) {\r\n        throw response\r\n    }\r\n    return results\r\n}\r\n\r\n\r\nexport const authUser = async (email, password) => {\r\n    return fetchMain(\r\n        settings.API_URL  + \"/auth/token/\",\r\n        'POST',\r\n        200, {}, {\r\n            email,\r\n            password\r\n        }\r\n    )\r\n}\r\n\r\nexport const refreshToken = async (token) => {\r\n    return fetchMain(\r\n        settings.API_URL + \"/auth/refresh/\",\r\n        'POST',\r\n        200, {}, {\r\n            refresh: token\r\n        }\r\n\r\n    )\r\n}\r\n\r\nexport const getResource = async (token, resource, id ) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/${resource}/${id}/`,\r\n        'GET',\r\n        200,\r\n        getTokenHeaders(token)\r\n    )\r\n}\r\n\r\nexport const getMe = async (token) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/me/`,\r\n        'GET',\r\n        200,\r\n        getTokenHeaders(token)\r\n    )\r\n}\r\n\r\nexport const fetchResources = async (token, resource, filters ) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/${resource}/`,\r\n        'GET',\r\n        200,\r\n        getTokenHeaders(token),\r\n        {},\r\n        filters\r\n    )\r\n}\r\n\r\nexport const createResource = async (token, resource, body) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/${resource}/`,\r\n        'POST',\r\n        201,\r\n        getTokenHeaders(token),\r\n        body\r\n    )\r\n}\r\n\r\nexport const updateResource = async (token, resource, id, body) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/${resource}/${id}/`,\r\n        'PUT',\r\n        200,\r\n        getTokenHeaders(token),\r\n        body\r\n    )\r\n}\r\n\r\nexport const patchResource = async (token, resource, id, body) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/${resource}/${id}/`,\r\n        'PATCH',\r\n        200,\r\n        getTokenHeaders(token),\r\n        body\r\n    )\r\n}\r\n\r\nexport const deleteResource = async (token, resource, id) => {\r\n    return fetchMain(\r\n        settings.API_URL + `/api/${resource}/${id}/`,\r\n        'DELETE',\r\n        204,\r\n        getTokenHeaders(token)\r\n    )\r\n}\r\n","import isPlainObject from 'is-plain-object'\r\n\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\nfunction isEmpty (value) {\r\n  if (isNumber(value)) {\r\n    return false\r\n  }\r\n  if (!value) {\r\n    return true\r\n  }\r\n  if (isArray(value) && value.length === 0) {\r\n    return true\r\n  } else if (!isString(value)) {\r\n    for (var i in value) {\r\n      if (_hasOwnProperty.call(value, i)) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n\r\nfunction isNumber (value) {\r\n  return typeof value === 'number'\r\n}\r\n\r\nfunction isString (obj) {\r\n  return typeof obj === 'string'\r\n}\r\n\r\nfunction isArray (obj) {\r\n  return Array.isArray(obj)\r\n}\r\n\r\nfunction assignToObj (target, source) {\r\n  for (var key in source) {\r\n    if (_hasOwnProperty.call(source, key)) {\r\n      target[key] = source[key]\r\n    }\r\n  }\r\n  return target\r\n}\r\n\r\nfunction getKey (key) {\r\n  if (key.startsWith('[') && key.endsWith(']')) {\r\n      const innerKey = key.slice(1,key.length - 1)\r\n      var intKey = parseInt(innerKey);\r\n      if (intKey.toString() === innerKey) {\r\n        return intKey;\r\n      }\r\n    }\r\n    return key;\r\n}\r\n\r\nvar objectPathImmutable = function (src) {\r\n  var dest = src\r\n  var committed = false\r\n\r\n  var transaction = Object.keys(api).reduce(function (proxy, prop) {\r\n    /* istanbul ignore else */\r\n    if (typeof api[prop] === 'function') {\r\n      proxy[prop] = function () {\r\n        var args = [dest, src].concat(Array.prototype.slice.call(arguments))\r\n\r\n        if (committed) {\r\n          throw new Error('Cannot call ' + prop + ' after `value`')\r\n        }\r\n\r\n        dest = api[prop].apply(null, args)\r\n\r\n        return transaction\r\n      }\r\n    }\r\n\r\n    return proxy\r\n  }, {})\r\n\r\n  transaction.value = function () {\r\n    committed = true\r\n    return dest\r\n  }\r\n\r\n  return transaction\r\n}\r\n\r\nfunction clone (obj, createIfEmpty, assumeArray) {\r\n  if (obj == null) {\r\n    if (createIfEmpty) {\r\n      if (assumeArray) {\r\n        return []\r\n      }\r\n\r\n      return {}\r\n    }\r\n\r\n    return obj\r\n  } else if (isArray(obj)) {\r\n    return obj.slice()\r\n  }\r\n\r\n  return assignToObj({}, obj)\r\n}\r\n\r\nfunction deepMerge (dest, src) {\r\n  if (dest !== src && isPlainObject(dest) && isPlainObject(src)) {\r\n    var merged = {}\r\n    for (var key in dest) {\r\n      if (dest.hasOwnProperty(key)) {\r\n        if (src.hasOwnProperty(key)) {\r\n          merged[key] = deepMerge(dest[key], src[key])\r\n        } else {\r\n          merged[key] = dest[key]\r\n        }\r\n      }\r\n    }\r\n\r\n    for (key in src) {\r\n      if (src.hasOwnProperty(key)) {\r\n        merged[key] = deepMerge(dest[key], src[key])\r\n      }\r\n    }\r\n    return merged\r\n  }\r\n  return src\r\n}\r\n\r\nfunction changeImmutable (dest, src, path, changeCallback) {\r\n  if (isNumber(path)) {\r\n    path = [path]\r\n  }\r\n  if (isEmpty(path)) {\r\n    return src\r\n  }\r\n  if (isString(path)) {\r\n    return changeImmutable(dest, src, path.split('.').map(getKey), changeCallback)\r\n  }\r\n  var currentPath = path[0]\r\n\r\n  if (!dest || dest === src) {\r\n    dest = clone(src, true, isNumber(currentPath))\r\n  }\r\n\r\n  if (path.length === 1) {\r\n    return changeCallback(dest, currentPath)\r\n  }\r\n\r\n  if (src != null) {\r\n    src = src[currentPath]\r\n  }\r\n\r\n  dest[currentPath] = changeImmutable(dest[currentPath], src, path.slice(1), changeCallback)\r\n\r\n  return dest\r\n}\r\n\r\nvar api = {}\r\napi.set = function set (dest, src, path, value) {\r\n  if (isEmpty(path)) {\r\n    return value\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    clonedObj[finalPath] = value\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.update = function update (dest, src, path, updater) {\r\n  if (isEmpty(path)) {\r\n    return updater(clone(src))\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    clonedObj[finalPath] = updater(clonedObj[finalPath])\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.push = function push (dest, src, path /*, values */) {\r\n  var values = Array.prototype.slice.call(arguments, 3)\r\n  if (isEmpty(path)) {\r\n    if (!isArray(src)) {\r\n      return values\r\n    } else {\r\n      return src.concat(values)\r\n    }\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    if (!isArray(clonedObj[finalPath])) {\r\n      clonedObj[finalPath] = values\r\n    } else {\r\n      clonedObj[finalPath] = clonedObj[finalPath].concat(values)\r\n    }\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.insert = function insert (dest, src, path, value, at) {\r\n  at = ~~at\r\n  if (isEmpty(path)) {\r\n    if (!isArray(src)) {\r\n      return [value]\r\n    }\r\n\r\n    var first = src.slice(0, at)\r\n    first.push(value)\r\n    return first.concat(src.slice(at))\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    var arr = clonedObj[finalPath]\r\n    if (!isArray(arr)) {\r\n      if (arr != null && typeof arr !== 'undefined') {\r\n        throw new Error('Expected ' + path + 'to be an array. Instead got ' + typeof path)\r\n      }\r\n      arr = []\r\n    }\r\n\r\n    var first = arr.slice(0, at)\r\n    first.push(value)\r\n    clonedObj[finalPath] = first.concat(arr.slice(at))\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.del = function del (dest, src, path) {\r\n  if (isEmpty(path)) {\r\n    return void 0\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    if (Array.isArray(clonedObj)) {\r\n      if (clonedObj[finalPath] !== undefined) {\r\n        clonedObj.splice(finalPath, 1)\r\n      }\r\n    } else {\r\n      if (clonedObj.hasOwnProperty(finalPath)) {\r\n        delete clonedObj[finalPath]\r\n      }\r\n    }\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.assign = function assign (dest, src, path, source) {\r\n  if (isEmpty(path)) {\r\n    if (isEmpty(source)) {\r\n      return src\r\n    }\r\n    return assignToObj(clone(src), source)\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    source = Object(source)\r\n    var target = clone(clonedObj[finalPath], true)\r\n    assignToObj(target, source)\r\n\r\n    clonedObj[finalPath] = target\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.merge = function assign (dest, src, path, source) {\r\n  if (isEmpty(path)) {\r\n    if (isEmpty(source)) {\r\n      return src\r\n    }\r\n    return deepMerge(src, source)\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    source = Object(source)\r\n    clonedObj[finalPath] = deepMerge(clonedObj[finalPath], source)\r\n    return clonedObj\r\n  })\r\n}\r\n\r\nconst immutable = Object.keys(api).reduce(function (objectPathImmutable, method) {\r\n  objectPathImmutable[method] = api[method].bind(null, null)\r\n\r\n  return objectPathImmutable\r\n}, objectPathImmutable)\r\n\r\nexport default immutable","import { put, call, takeEvery, cancelled, \r\n         all, select, takeLatest }  from 'redux-saga/effects'\r\nimport * as Sentry from '@sentry/browser';\r\nimport moment from 'moment'\r\n\r\nimport { UnknownException } from '../../exceptions'\r\nimport immutable from '../../libs/object-path-immutable'\r\nimport objectPath from '../../libs/object-path'\r\n\r\nexport function getActionStepType(action, step) {\r\n    return `${action.toUpperCase()}_${step.toUpperCase()}`\r\n}\r\n\r\nexport const ACTION_DONE = 'DONE';\r\nexport const ACTION_ERROR = 'ERROR';\r\nexport const ACTION_ABORT = 'ABORT';\r\nexport const ACTION_FINISH = 'FINISH';\r\n\r\n/*\r\nFlow es una clase que facilita el trabajo de correr n acciones que operan todas \r\njuntas en un mismo path del estado.\r\n\r\n### Acciones\r\nEn flow se manejan dos tipos de acciones como concepto. \r\n\r\nPúblicas: Las acciones públicas que se escriben generalmente en un archivo \r\nactions.js que son las acciones que se van a llamar de diferenes partes del \r\nproyecto\r\nPrivadas: Acciones que son llamadas por otras acciones y que nunca se van a \r\nutilizar afuera de los Flow. Para etsas acciones no hay definiciones explicitas\r\n\r\nEsta diferencia conceptual ayuda de gran manera a no llenar el código de \r\nboilerplate\r\n\r\n### Paths\r\n\r\nEn flow hay dos paths a tener en cuenta. \r\n\r\nPath Root: Es el path donde este flow corre y por ende sería imposible \r\nmodificar cualquier parte del estado qie este por arriba del path root.\r\nActtion Path: Es el path donde se va a ir actualizando el estado de la acción\r\nmientras corre. Cada acción debe configurar su path de accion.\r\n\r\nLa clase Flow se maneja en su totailidad seteando la variable actions, la cual\r\npermite definir los métodos que se corren en cada situación \r\n\r\n - **actionPath**: un string o un método que recibe (*action*, *state*)\r\n - **run**: un método que recibe (*action*, *state*)\r\n - **onError**: un método que recibe (*action*, *state*)\r\n - **onAbort**: un método que recibe (*action*, *state*)\r\n - **onFinish**: un método que recibe (*action*, *state*)\r\n - **onDone**: un método que recibe (*action*, *state*)\r\n - **reduceStart**: un método que recibe (*state*, *state*)\r\n - **reduceError**: un método que recibe (*state*, *state*)\r\n - **reduceDone**: un método que recibe (*state*, *state*)\r\n - **reduceAbort**: un método que recibe (*state*, *state*)\r\n - **reduceFinish**: un método que recibe (*state*, *state*)\r\n\r\nconstructor(rootPath) {\r\n    super(rootPath)\r\n    actions = {\r\n        ACTION_KEY: {\r\n            actionPath,\r\n            run,        // debe  \r\n            onError,\r\n            onAbort,\r\n            onFinish,\r\n            onDone,\r\n            reduceStart,\r\n            reduceError,\r\n            reduceDone,\r\n            reduceAbort,\r\n            reduceFinish\r\n        },\r\n    }\r\n}\r\n\r\nHay una variable de clase que se usa para inicializar el path en caso de que el\r\nestado sea undefined `initialState`\r\n\r\nSe pueden sobreescribir los siguientes métodos para cambiar su funcionamiento\r\n\r\n*isFlowAction*: Recibe una acción y determina si la acción corresponde al Flow\r\n*resolvePattern*: Recibe un step *undefined*, *ACTION_ERROR*, *ACTION_DONE*, \r\n   *ACTION_ABORT*, *ACTION_FINISH* y tiene que devolver un método que recibiendo\r\n   una accion determina si hay que correr la saga para ese step o no. Se usa\r\n   para el takeEvery de sagas\r\n*runAction*: El método que se usa para correr lo que sea que haga casa acción\r\n   hoy en día simplemente llama al método. \r\n\r\n\r\n*/\r\nexport default class Flow {\r\n\r\n    actionInitialState = {\r\n        error: undefined,\r\n        working: 0,\r\n        done: false,\r\n        abort: false,\r\n        requested: undefined,\r\n        failed: undefined,\r\n        completed: undefined,\r\n        aborted: undefined,\r\n    }\r\n    actions = {}\r\n    initialState = {}\r\n    rootPath = \"\"\r\n\r\n    constructor(rootPath) {\r\n        this.rootPath = rootPath\r\n        this.isFlowAction = this.isFlowAction.bind(this);\r\n        this.resolvePattern = this.resolvePattern.bind(this);\r\n        this.resolvePatternLatest = this.resolvePatternLatest.bind(this);\r\n        this.stepAction = this.stepAction.bind(this)\r\n        this.onStart = this.onStart.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n        this.onDone = this.onDone.bind(this);\r\n        this.onAbort = this.onAbort.bind(this);\r\n        this.onFinish = this.onFinish.bind(this);\r\n        this.reduceStart = this.reduceStart.bind(this);\r\n        this.reduceError = this.reduceError.bind(this);\r\n        this.reduceDone = this.reduceDone.bind(this);\r\n        this.reduceAbort = this.reduceAbort.bind(this);\r\n        this.reduceFinish = this.reduceFinish.bind(this);\r\n        this.reduceActionDone = this.reduceActionDone.bind(this);\r\n        this.reduceAction = this.reduceAction.bind(this);\r\n        this.reducer = this.reducer.bind(this);\r\n        this.sagas = this.sagas.bind(this);\r\n        this.saga = this.saga.bind(this);\r\n        this.runAction = this.runAction.bind(this);\r\n    }\r\n\r\n    isFlowAction(action) {\r\n        return Object.keys(this.actions).indexOf(action.action) >= 0\r\n    }\r\n\r\n    resolvePattern(step=undefined) {\r\n        let answer = function (action) {\r\n            return this.rootPath && this.isFlowAction(action) && step === action.step\r\n        }\r\n        return answer.bind(this)\r\n    }\r\n\r\n    resolvePatternLatest(step=undefined) {\r\n        let answer = function (action) {\r\n            return false \r\n        }\r\n        return answer.bind(this)\r\n    }\r\n\r\n    stepAction(action, step, extra = {}){\r\n        return Object.assign({}, action, extra,\r\n            {\r\n                type: getActionStepType(action.action, step),\r\n                step: step,\r\n            }\r\n        )\r\n    }\r\n\r\n    * onError(action) {\r\n        try {\r\n            const actionInfo = this.actions[action.action]\r\n            const flowState = yield select((state) => objectPath.get(state, this.rootPath ))\r\n            if (actionInfo && actionInfo.onError) {\r\n                yield call([this, actionInfo.onError], action, flowState)\r\n            }\r\n        } catch (error) {\r\n            Sentry.captureException(error);\r\n        }\r\n    }\r\n    * onDone(action) {\r\n        try {\r\n            const actionInfo = this.actions[action.action]\r\n            const flowState = yield select((state) => objectPath.get(state, this.rootPath ))\r\n            if (actionInfo && actionInfo.onDone) {\r\n                yield call([this, actionInfo.onDone], action, flowState)\r\n            }\r\n        } catch (error) {\r\n            Sentry.captureException(error);\r\n        }\r\n    }\r\n    * onAbort(action) {\r\n        try {\r\n            const actionInfo = this.actions[action.action]\r\n            const flowState = yield select((state) => objectPath.get(state, this.rootPath ))\r\n            if (actionInfo && actionInfo.onAbort) {\r\n                yield call([this, actionInfo.onAbort], action, flowState)\r\n            }\r\n        } catch (error) {\r\n            Sentry.captureException(error);\r\n        }\r\n    }\r\n    * onFinish(action) {\r\n        try {\r\n            const actionInfo = this.actions[action.action]\r\n            const flowState = yield select((state) => objectPath.get(state, this.rootPath ))\r\n            if (actionInfo && actionInfo.onFinish) {\r\n                yield call([this, actionInfo.onFinish], action, flowState)\r\n            }\r\n        } catch (error) {\r\n            Sentry.captureException(error);\r\n        }\r\n    }\r\n\r\n    * runAction(action, info, state) {\r\n        const results = yield info.run(action, state)\r\n        return results\r\n    }\r\n\r\n    * onStart(action) {\r\n        let results = undefined\r\n        let error = undefined\r\n        const actionInfo = this.actions[action.action]\r\n        if (actionInfo && actionInfo.run) {\r\n            const flowState = yield select((state) => objectPath.get(state, this.rootPath ))\r\n            try {\r\n                results = yield call(this.runAction, action, actionInfo, flowState)\r\n                if (results === undefined) {\r\n                    yield put(this.stepAction(action, ACTION_ABORT))\r\n                } else {\r\n                    yield put(this.stepAction(action, ACTION_DONE, { results }))\r\n                }\r\n            } catch (raiseError) {\r\n                error = raiseError\r\n                if (error instanceof UnknownException) {\r\n                    Sentry.captureException(error);\r\n                }\r\n                yield put(this.stepAction(action, ACTION_ERROR, { error }))\r\n            } finally {\r\n                let wasCancelled = yield cancelled()\r\n                if (wasCancelled) {\r\n                    yield put(this.stepAction(action, ACTION_ABORT))\r\n                }\r\n                yield put(this.stepAction(action, ACTION_FINISH, { results, error }))\r\n            }\r\n        }\r\n    }\r\n    \r\n    reduceStart(state, action, info) { \r\n        if (info.reduceStart) {\r\n            return info.reduceStart(state, action)\r\n        }\r\n        return state \r\n    }\r\n\r\n    reduceError(state, action, info) { \r\n        if (info.reduceError) {\r\n            return info.reduceError(state, action)\r\n        }\r\n        return state \r\n    }\r\n\r\n    reduceDone(state, action, info) { \r\n        if (info.reduceDone) {\r\n            return info.reduceDone(state, action)\r\n        }\r\n        return state \r\n    }\r\n\r\n    reduceAbort(state, action, info) { \r\n        if (info.reduceAbort) {\r\n            return info.reduceAbort(state, action)\r\n        }\r\n        return state \r\n    }\r\n\r\n    reduceFinish(state, action, info) { \r\n        if (info.reduceFinish) {\r\n            return info.reduceFinish(state, action)\r\n        }\r\n        return state \r\n    }\r\n\r\n    reduceActionDone(state, action, info) {\r\n        if (info.reduceActionDone) {\r\n            return info.reduceActionDone(state, action)\r\n        }\r\n        return state\r\n    }\r\n\r\n\r\n    reduceAction(state, action) {\r\n        if (state === undefined) {\r\n            state = this.actionInitialState\r\n        }\r\n        if (action.loop === this.slug) {\r\n            const actionInfo = this.actions[action.action]\r\n            switch (action.step) {\r\n                case undefined:\r\n                    return Object.assign({}, state,\r\n                        {\r\n                            working: state.working + 1,\r\n                            requested: moment().valueOf(),\r\n                            done: false,\r\n                            error: undefined,\r\n                            abort: false,\r\n                        }\r\n                    )\r\n                case ACTION_ERROR:\r\n                    return Object.assign({}, state,\r\n                        {\r\n                            error: action.error,\r\n                            failed: moment().valueOf(),\r\n                            done: false,\r\n                            abort: false,\r\n                        }\r\n                    )\r\n                case ACTION_DONE:\r\n                    return Object.assign({},\r\n                        this.reduceActionDone(state, action, actionInfo),\r\n                        {\r\n                            error: undefined,\r\n                            completed: moment().valueOf(),\r\n                            done: true,\r\n                            abort: false\r\n                        }\r\n                    )\r\n                case ACTION_ABORT:\r\n                    return Object.assign({}, state,\r\n                        {\r\n                            error: undefined,\r\n                            done: false,\r\n                            abort: true,\r\n                            aborted: moment().valueOf()\r\n                        }\r\n                    )\r\n                case ACTION_FINISH:\r\n                    return Object.assign({}, state,\r\n                        {\r\n                            working: state.working - 1,\r\n                        }\r\n                    )\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n        return state\r\n    }\r\n\r\n    reducer(state, action) {\r\n        if (this.isFlowAction(action) && this.actions[action.action]) {\r\n            const actionInfo = this.actions[action.action]\r\n            if (state === undefined || Object.keys(state).length === 0) {\r\n                state = this.initialState || {}\r\n            }\r\n            let newState = undefined\r\n            switch(action.step){\r\n                case undefined:\r\n                    newState = this.reduceStart(state, action, actionInfo)\r\n                    break;\r\n                case ACTION_ERROR:\r\n                    newState = this.reduceError(state, action, actionInfo)\r\n                    break;\r\n                case ACTION_DONE:\r\n                    newState = this.reduceDone(state, action, actionInfo)\r\n                    break;\r\n                case ACTION_ABORT:\r\n                    newState = this.reduceAbort(state, action, actionInfo)\r\n                    break;\r\n                case ACTION_FINISH:\r\n                    newState = this.reduceFinish(state, action, actionInfo)\r\n                    break;\r\n                default:\r\n                    newState = state\r\n\r\n            }\r\n            const path = typeof actionInfo.actionPath === 'string'?actionInfo.actionPath:actionInfo.actionPath(action, state)\r\n            return immutable.merge(newState, path, this.reduceAction(objectPath.get(state, path), action) )\r\n        } \r\n        return state || {}\r\n    }\r\n\r\n    sagas() {\r\n        return []\r\n    }\r\n\r\n    * saga() {\r\n        yield all([\r\n            takeLatest(this.resolvePatternLatest(), this.onStart),\r\n            takeEvery(this.resolvePattern(), this.onStart),\r\n            takeEvery(this.resolvePattern(ACTION_ERROR), this.onError),\r\n            takeEvery(this.resolvePattern(ACTION_DONE), this.onDone),\r\n            takeEvery(this.resolvePattern(ACTION_ABORT), this.onAbort),\r\n            takeEvery(this.resolvePattern(ACTION_FINISH), this.onFinish),\r\n            ...this.sagas(),\r\n        ])\r\n    }\r\n}","import moment from 'moment'\r\nimport { take, select, put } from 'redux-saga/effects'\r\nimport * as api from '../../apis/main'\r\nimport immutable from '../../libs/object-path-immutable'\r\nimport { requestRefreshToken, REFRESH_TOKEN } from '../AuthFlow'\r\nimport objectPath from '../../libs/object-path'\r\nimport { getActionStepType, ACTION_FINISH, Flow } from '../Flow'\r\nimport { ValidationException } from '../../exceptions'\r\nimport { GET, CLEAN, CREATE, CLONE, UPDATE, PATCH, DELETE, FETCH, SEARCH, SELECT } from './actions'\r\n\r\nexport default class ResourceFlow extends Flow {\r\n    useParser = false\r\n\r\n    constructor(rootPath, resource) {\r\n        super(rootPath)\r\n        this.resource = resource\r\n        this.actions = {\r\n            [GET]: {\r\n                actionPath: this.actionPathGet,\r\n                run: this.runGet,\r\n                onError: this.onErrorGet,\r\n                onAbort: this.onAbortGet,\r\n                onFinish: this.onFinishGet,\r\n                onDone: this.onDoneGet,\r\n                reduceStart: this.reduceStartGet,\r\n                reduceError: this.reduceErrorGet,\r\n                reduceDone: this.reduceDoneGet,\r\n                reduceAbort: this.reduceAbortGet,\r\n                reduceFinish: this.reduceFinishGet,\r\n                reduceActionDone: this.reduceActionDoneGet,\r\n            },\r\n            [SELECT]: {\r\n                actionPath: this.actionPathSelect,\r\n                run: this.runSelect,\r\n                onError: this.onErrorSelect,\r\n                onAbort: this.onAbortSelect,\r\n                onFinish: this.onFinishSelect,\r\n                onDone: this.onDoneSelect,\r\n                reduceStart: this.reduceStartSelect,\r\n                reduceError: this.reduceErrorSelect,\r\n                reduceDone: this.reduceDoneSelect,\r\n                reduceAbort: this.reduceAbortSelect,\r\n                reduceFinish: this.reduceFinishSelect,\r\n                reduceActionDone: this.reduceActionDoneSelect,\r\n            },\r\n            [CLEAN]: {\r\n                actionPath: this.actionPathClean,\r\n                run: this.runClean,\r\n                onError: this.onErrorClean,\r\n                onAbort: this.onAbortClean,\r\n                onFinish: this.onFinishClean,\r\n                onDone: this.onDoneClean,\r\n                reduceStart: this.reduceStartClean,\r\n                reduceError: this.reduceErrorClean,\r\n                reduceDone: this.reduceDoneClean,\r\n                reduceAbort: this.reduceAbortClean,\r\n                reduceFinish: this.reduceFinishClean,\r\n                reduceActionDone: this.reduceActionDoneClean,\r\n            },\r\n            [CREATE]: {\r\n                actionPath: this.actionPathCreate,\r\n                run: this.runCreate,\r\n                onError: this.onErrorCreate,\r\n                onAbort: this.onAbortCreate,\r\n                onFinish: this.onFinishCreate,\r\n                onDone: this.onDoneCreate,\r\n                reduceStart: this.reduceStartCreate,\r\n                reduceError: this.reduceErrorCreate,\r\n                reduceDone: this.reduceDoneCreate,\r\n                reduceAbort: this.reduceAbortCreate,\r\n                reduceFinish: this.reduceFinishCreate,\r\n                reduceActionDone: this.reduceActionDoneCreate,\r\n            },\r\n            [CLONE]: {\r\n                actionPath: this.actionPathClone,\r\n                run: this.runClone,\r\n                onError: this.onErrorClone,\r\n                onAbort: this.onAbortClone,\r\n                onFinish: this.onFinishClone,\r\n                onDone: this.onDoneClone,\r\n                reduceStart: this.reduceStartClone,\r\n                reduceError: this.reduceErrorClone,\r\n                reduceDone: this.reduceDoneClone,\r\n                reduceAbort: this.reduceAbortClone,\r\n                reduceFinish: this.reduceFinishClone,\r\n                reduceActionDone: this.reduceActionDoneClone,\r\n            },\r\n            [UPDATE]: {\r\n                actionPath: this.actionPathUpdate,\r\n                run: this.runUpdate,\r\n                onError: this.onErrorUpdate,\r\n                onAbort: this.onAbortUpdate,\r\n                onFinish: this.onFinishUpdate,\r\n                onDone: this.onDoneUpdate,\r\n                reduceStart: this.reduceStartUpdate,\r\n                reduceError: this.reduceErrorUpdate,\r\n                reduceDone: this.reduceDoneUpdate,\r\n                reduceAbort: this.reduceAbortUpdate,\r\n                reduceFinish: this.reduceFinishUpdate,\r\n                reduceActionDone: this.reduceActionDoneUpdate,\r\n            },\r\n            [PATCH]: {\r\n                actionPath: this.actionPathPatch,\r\n                run: this.runPatch,\r\n                onError: this.onErrorPatch,\r\n                onAbort: this.onAbortPatch,\r\n                onFinish: this.onFinishPatch,\r\n                onDone: this.onDonePatch,\r\n                reduceStart: this.reduceStartPatch,\r\n                reduceError: this.reduceErrorPatch,\r\n                reduceDone: this.reduceDonePatch,\r\n                reduceAbort: this.reduceAbortPatch,\r\n                reduceFinish: this.reduceFinishPatch,\r\n                reduceActionDone: this.reduceActionDonePatch,\r\n            },\r\n            [DELETE]: {\r\n                actionPath: this.actionPathDelete,\r\n                run: this.runDelete,\r\n                onError: this.onErrorDelete,\r\n                onAbort: this.onAbortDelete,\r\n                onFinish: this.onFinishDelete,\r\n                onDone: this.onDoneDelete,\r\n                reduceStart: this.reduceStartDelete,\r\n                reduceError: this.reduceErrorDelete,\r\n                reduceDone: this.reduceDoneDelete,\r\n                reduceAbort: this.reduceAbortDelete,\r\n                reduceFinish: this.reduceFinishDelete,\r\n                reduceActionDone: this.reduceActionDoneDelete,\r\n            },\r\n            [FETCH]: {\r\n                actionPath: this.actionPathFetch,\r\n                run: this.runFetch,\r\n                onError: this.onErrorFetch,\r\n                onAbort: this.onAbortFetch,\r\n                onFinish: this.onFinishFetch,\r\n                onDone: this.onDoneFetch,\r\n                reduceStart: this.reduceStartFetch,\r\n                reduceError: this.reduceErrorFetch,\r\n                reduceDone: this.reduceDoneFetch,\r\n                reduceAbort: this.reduceAbortFetch,\r\n                reduceFinish: this.reduceFinishFetch,\r\n                reduceActionDone: this.reduceActionDoneFetch,\r\n            },\r\n            [SEARCH]: {\r\n                actionPath: this.actionPathSearch,\r\n                run: this.runSearch,\r\n                onError: this.onErrorSearch,\r\n                onAbort: this.onAbortSearch,\r\n                onFinish: this.onFinishSearch,\r\n                onDone: this.onDoneSearch,\r\n                reduceStart: this.reduceStartSearch,\r\n                reduceError: this.reduceErrorSearch,\r\n                reduceDone: this.reduceDoneSearch,\r\n                reduceAbort: this.reduceAbortSearch,\r\n                reduceFinish: this.reduceFinishSearch,\r\n                reduceActionDone: this.reduceActionDoneSearch,\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    isTokenForRefresh = (timestamp) => {\r\n        return moment(timestamp).isBefore(moment().add(-15, 'minutes'))\r\n    }\r\n    \r\n    * runAction(action, info, state) {\r\n        const auth = yield select((st) => st.auth)\r\n        let token = auth.accessToken\r\n\r\n        if (this.isTokenForRefresh(auth.tokenTimestamp)) {\r\n            yield put(requestRefreshToken())\r\n            const refreshAction = yield take(getActionStepType(REFRESH_TOKEN, ACTION_FINISH))\r\n\r\n            if (refreshAction.error) {\r\n                throw refreshAction.error\r\n            }\r\n            token = yield select((st) => st.auth.accessToken)\r\n        }\r\n\r\n        if (!token) {\r\n            throw new ValidationException(\"no token\")\r\n        }\r\n\r\n        const results = yield info.run(action, state, token)\r\n        return results\r\n    }\r\n\r\n    isFlowAction = (action) => {\r\n        return Object.keys(this.actions).indexOf(action.action) >= 0 && action.resource === this.resource\r\n    }\r\n\r\n    resolvePattern = (step=undefined) => {\r\n        let answer = function (action) {\r\n            return action.type !== SEARCH && this.rootPath && this.isFlowAction(action) && step === action.step && action.resource === this.resource\r\n        }\r\n        return answer.bind(this)\r\n    }\r\n\r\n    resolvePatternLatest = (step=undefined) => {\r\n        let answer = function (action) {\r\n            return action.type === SEARCH && this.rootPath && this.isFlowAction(action) && step === action.step && action.resource === this.resource\r\n        }\r\n        return answer.bind(this)\r\n    }\r\n\r\n    reduceClean = (state, action) => {\r\n        if (action.path) {\r\n            return immutable.del(state, action.path)\r\n        }\r\n        return state\r\n    }\r\n\r\n    reduceExists = (state, action) => {\r\n        const path = action.path?action.path:action.id\r\n        return immutable.merge(\r\n            state,\r\n            `objects.${path}.body`,\r\n            this.useParser? this.parseResource(action.results):action.results \r\n        )\r\n    }\r\n\r\n    reduceNew = (state, action) => {\r\n        return immutable.merge(\r\n            state,\r\n            `objects.${action.results.id}.body`,\r\n            this.useParser? this.parseResource(action.results):action.results\r\n        )\r\n    }\r\n\r\n    reduceDelete = (state, action) => {\r\n        return immutable.del(state, `objects.${action.id}.body` )\r\n    }\r\n\r\n    reduceFetch = (state, action) => {\r\n        const results = action.results.results || action.results\r\n        return immutable.merge(\r\n            state, \r\n            'objects',\r\n            results.reduce((result, elem) => {\r\n                result[elem.id] = {body: this.useParser? this.parseResource(elem):elem}\r\n                return result\r\n            }, {})\r\n        )\r\n    }\r\n\r\n    parseResource = (obj) => {\r\n        return obj\r\n    }\r\n\r\n    reduceSearch = (state, action) => {\r\n        const results = action.results.results || action.results\r\n        let newState = immutable.set(state, `searches.${action.id}.result`, this.useParser? results.map(e => this.parseResource(e)):results )\r\n        newState = immutable.set(newState, `searches.${action.id}.count`, action.results.count )\r\n        return immutable.set(newState, `searches.${action.id}.total_count`, action.results.total_count )\r\n    }\r\n\r\n    reduceSelect = (state, action) => {\r\n        if (action.path) {\r\n            let actual = action.defaultObj\r\n            if (actual === undefined) {\r\n                actual = objectPath.get(state, `objects.${action.id}.body`)\r\n            }\r\n            if (actual) {\r\n                return immutable.set(\r\n                    state,\r\n                    `objects.${action.path}.body`,\r\n                    actual\r\n                )\r\n            }\r\n        }\r\n        return state\r\n    }\r\n\r\n    clearSearch = (state, action) => {\r\n        return immutable.set(state, `searches.${action.id}.result`, [])\r\n    }\r\n\r\n    actionPathGet = (action, state) => action.path?`objects.${action.path}.get`:`objects.${action.id}.get`\r\n    actionPathSelect = (action, state) => `objects.${action.path}.get`\r\n    actionPathClean = (action, state) => 'clean'\r\n    actionPathCreate = (action, state) => action.path?`objects.${action.path}.create`:`create`\r\n    actionPathClone = (action, state) => `objects.${action.id}.clone`\r\n    actionPathUpdate = (action, state) => `objects.${action.id}.update`\r\n    actionPathPatch = (action, state) => `objects.${action.id}.patch`\r\n    actionPathDelete = (action, state) => `objects.${action.id}.delete`\r\n    actionPathFetch = (action, state) => 'fetch'\r\n    actionPathSearch = (action, state) => `searches.${action.id}.status`\r\n    runGet = (action, state, token) => api.getResource(token, action.resource, action.id)\r\n    runSelect = (action, state, token) => null\r\n    runClean = (action, state, token) => null\r\n    runCreate = (action, state, token) => api.createResource(token, action.resource, action.body)\r\n    runClone = (action, state, token) => api.createResource(token, action.resource, action.body)\r\n    runUpdate = (action, state, token) => api.updateResource(token, action.resource, action.id, action.body)\r\n    runPatch = (action, state, token) => api.patchResource(token, action.resource, action.id, action.body)\r\n    runDelete = (action, state, token) => api.deleteResource(token, action.resource, action.id)\r\n    runFetch = (action, state, token) => api.fetchResources(token, action.resource, Object.assign({}, action.tempFilters, {limit: 2000}))  \r\n    runSearch = (action, state, token) => api.fetchResources(token, action.resource, Object.assign({}, action.tempFilters, {\r\n        q:action.q,\r\n        offset: action.offset,\r\n        limit: action.limit,\r\n        o: action.order,\r\n    }))\r\n    onErrorGet = (action, state, token) => {}\r\n    onErrorSelect = (action, state, token) => {}\r\n    onErrorClean = (action, state, token) => {}\r\n    onErrorCreate = (action, state, token) => {}\r\n    onErrorClone = (action, state, token) => {}\r\n    onErrorUpdate = (action, state, token) => {}\r\n    onErrorPatch = (action, state, token) => {}\r\n    onErrorDelete = (action, state, token) => {}\r\n    onErrorFetch = (action, state, token) => {}\r\n    onErrorSearch = (action, state, token) => {}\r\n    onAbortGet = (action, state, token) => {}\r\n    onAbortSelect = (action, state, token) => {}\r\n    onAbortClean = (action, state, token) => {}\r\n    onAbortCreate = (action, state, token) => {}\r\n    onAbortClone = (action, state, token) => {}\r\n    onAbortUpdate = (action, state, token) => {}\r\n    onAbortPatch = (action, state, token) => {}\r\n    onAbortDelete = (action, state, token) => {}\r\n    onAbortFetch = (action, state, token) => {}\r\n    onAbortSearch = (action, state, token) => {}\r\n    onFinishGet = (action, state, token) => {}\r\n    onFinishSelect = (action, state, token) => {}\r\n    onFinishClean = (action, state, token) => {}\r\n    onFinishCreate = (action, state, token) => {}\r\n    onFinishClone = (action, state, token) => {}\r\n    onFinishUpdate = (action, state, token) => {}\r\n    onFinishPatch = (action, state, token) => {}\r\n    onFinishDelete = (action, state, token) => {}\r\n    onFinishFetch = (action, state, token) => {}\r\n    onFinishSearch = (action, state, token) => {}\r\n    onDoneGet = (action, state, token) => {}\r\n    onDoneSelect = (action, state, token) => {}\r\n    onDoneClean = (action, state, token) => {}\r\n    onDoneCreate = (action, state, token) => {}\r\n    onDoneClone = (action, state, token) => {}\r\n    onDoneUpdate = (action, state, token) => {}\r\n    onDonePatch = (action, state, token) => {}\r\n    onDoneDelete = (action, state, token) => {}\r\n    onDoneFetch = (action, state, token) => {}\r\n    onDoneSearch = (action, state, token) => {}\r\n    reduceStartGet = (state, action) => this.reduceSelect(state, action)\r\n    reduceStartSelect = (state, action) => state\r\n    reduceStartClean = (state, action) => state\r\n    reduceStartCreate = (state, action) => state\r\n    reduceStartClone = (state, action) => state\r\n    reduceStartUpdate = (state, action) => state\r\n    reduceStartPatch = (state, action) => state\r\n    reduceStartDelete = (state, action) => state\r\n    reduceStartFetch = (state, action) => state\r\n    reduceStartSearch = (state, action) => state //this.clearSearch(state, action)\r\n    reduceErrorGet = (state, action) => state\r\n    reduceErrorSelect = (state, action) => state\r\n    reduceErrorClean = (state, action) => state\r\n    reduceErrorCreate = (state, action) => state\r\n    reduceErrorClone = (state, action) => state\r\n    reduceErrorUpdate = (state, action) => state\r\n    reduceErrorPatch = (state, action) => state\r\n    reduceErrorDelete = (state, action) => state\r\n    reduceErrorFetch = (state, action) => state\r\n    reduceErrorSearch = (state, action) => state\r\n    reduceDoneGet = (state, action) => this.reduceExists(state, action)\r\n    reduceDoneSelect = (state, action) => this.reduceSelect(state, action)\r\n    reduceDoneClean = (state, action) => this.reduceClean(state, action)\r\n    reduceDoneCreate = (state, action) => this.reduceNew(state, action)\r\n    reduceDoneClone = (state, action) => this.reduceNew(state, action)\r\n    reduceDoneUpdate = (state, action) => this.reduceExists(state, action)\r\n    reduceDonePatch = (state, action) => this.reduceExists(state, action)\r\n    reduceDoneDelete = (state, action) => this.reduceDelete(state, action)\r\n    reduceDoneFetch = (state, action) => this.reduceFetch(state, action)\r\n    reduceDoneSearch = (state, action) => this.reduceSearch(state, action)\r\n    reduceAbortGet = (state, action) => state\r\n    reduceAbortSelect = (state, action) => state\r\n    reduceAbortClean = (state, action) => state\r\n    reduceAbortCreate = (state, action) => state\r\n    reduceAbortClone = (state, action) => state\r\n    reduceAbortUpdate = (state, action) => state\r\n    reduceAbortPatch = (state, action) => state\r\n    reduceAbortDelete = (state, action) => state\r\n    reduceAbortFetch = (state, action) => state\r\n    reduceAbortSearch = (state, action) => state\r\n    reduceFinishGet = (state, action) => state\r\n    reduceFinishSelect = (state, action) => state\r\n    reduceFinishClean = (state, action) => state\r\n    reduceFinishCreate = (state, action) => state\r\n    reduceFinishClone = (state, action) => state\r\n    reduceFinishUpdate = (state, action) => state\r\n    reduceFinishPatch = (state, action) => state\r\n    reduceFinishDelete = (state, action) => state\r\n    reduceFinishFetch = (state, action) => state\r\n    reduceFinishSearch = (state, action) => state\r\n    reduceActionDoneSelect = (state, action) => state\r\n    reduceActionDoneGet = (state, action) => state\r\n    reduceActionDoneClean = (state, action) => state\r\n    reduceActionDoneCreate = (state, action) => Object.assign({}, state, { id:action.results.id })\r\n    reduceActionDoneClone = (state, action) => state\r\n    reduceActionDoneUpdate = (state, action) => state\r\n    reduceActionDonePatch = (state, action) => state\r\n    reduceActionDoneDelete = (state, action) => state\r\n    reduceActionDoneFetch = (state, action) => state\r\n    reduceActionDoneSearch = (state, action) => state\r\n} \r\n\r\n","export const IS_LOGGED = 'IS_LOGGED'\r\nexport const LOGIN = 'LOGIN'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN'\r\n\r\nexport function requestLogin(email, password, keepSession, next){\r\n    return  {\r\n        type: LOGIN,\r\n        action: LOGIN,\r\n        email,\r\n        password,\r\n        keepSession,\r\n        next\r\n    }\r\n} \r\n\r\nexport function requestLogout() {\r\n    return {\r\n        type: LOGOUT,\r\n        action: LOGOUT,\r\n    }\r\n}\r\n\r\nexport function requestIsLogged() {\r\n    return {\r\n        type: IS_LOGGED,\r\n        action: IS_LOGGED,\r\n    }\r\n}\r\n\r\nexport function requestRefreshToken() {\r\n    return {\r\n        type: REFRESH_TOKEN,\r\n        action: REFRESH_TOKEN,\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst FormGroup = ({children}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from 'react';\r\nimport FormGroup from './FormGroup'\r\n\r\nconst LabelledGroup = ({htmlFor, name, children}) => {\r\n    return (\r\n        <FormGroup>\r\n            <label htmlFor={htmlFor}>{name}:</label>\r\n            {children}\r\n        </FormGroup>\r\n    )\r\n};\r\n\r\nexport default LabelledGroup;","import React, { Component, Fragment } from 'react';\r\nimport InputText from '../forms/inputs/InputText'\r\nimport { withResourceModal }   from \"../contexts/ResourceModalContext\"\r\nimport LabelledGroup from '../forms/LabelledGroup'\r\nimport objectPath from \"../libs/object-path\";\r\nimport {searchResources} from \"../flows/ResourceFlow\";\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col } from 'reactstrap'\r\nimport * as Yup from 'yup'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\nconst mapPropsToValues = ({obj}) => {\r\n    return {\r\n            username: obj ? obj.username : '',\r\n            name: obj ? obj.name : '',\r\n            email: obj ? obj.email : '',\r\n            password: '',\r\n            confirmPassword: '',\r\n    }\r\n}\r\n\r\nconst validationSchema = (props) => {\r\n    return Yup.object().shape({\r\n        first_name: Yup.string()\r\n            .required('El nombre es obligatorio'),\r\n        username: Yup.string()\r\n            .required('El usuario es obligatorio'),\r\n        email: Yup.string()\r\n            .required('El email es obligatorio')\r\n            .email('El email ingresado no es válido'),\r\n        password: Yup\r\n            .string()\r\n            .label('Contraseña')\r\n            .min(2, 'Es demasiado corta...'),\r\n        confirmPassword: Yup\r\n            .string()\r\n            .label('Confirmar contraseña')\r\n            .test('passwords-match', 'Las contraseñas no coinciden', function(value) {\r\n              return this.parent.password === value;\r\n            }),\r\n    })\r\n}\r\n\r\nclass UserModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.firstInput = React.createRef();\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"name\" name={'Nombre'}>\r\n                            <InputText name=\"name\" innerRef={this.firstInput}/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"username\" name={'Usuario'}>\r\n                            <InputText name=\"username\"/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"email\" name={'Email'}>\r\n                            <InputText name=\"email\"/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"password\" name={'Contraseña'}>\r\n                            <InputText name=\"password\" password/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"confirmPassword\" name={'Confirmar Contraseña'}>\r\n                            <InputText name=\"confirmPassword\" password/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withResourceModal(\r\n    mapPropsToValues, \r\n    \"Usuario\",\r\n    \"\",\r\n    validationSchema,\r\n    connect(mapStateToProps, mapDispatchToProps)(UserModal)\r\n);\r\n\r\n","import React, { Component } from \"react\";\r\nimport FormModal from '../modals/FormModal'\r\nimport { connect } from 'react-redux'\r\nimport objectPath from '../libs/object-path'\r\nimport { createResource, updateResource } from '../flows/ResourceFlow'\r\nimport { withModal } from '../contexts/ModalsContext.jsx'\r\nimport { withFormik } from 'formik'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let opPath = '';\r\n    let obj = undefined;\r\n    let objLoading = false;\r\n    const operation = ownProps.openData.operation\r\n    switch (operation) {\r\n        case \"create\": \r\n            opPath = 'create';\r\n            break;\r\n        case \"update\":\r\n            opPath = `objects.${ownProps.openData.objId}.${operation}`;\r\n            obj = objectPath.get(state, `${ownProps.modalId}.objects.${ownProps.openData.objId}.body`);\r\n            objLoading = obj === undefined\r\n            break;\r\n        case \"clone\":\r\n            opPath = 'create';\r\n            obj = objectPath.get(state, `${ownProps.modalId}.objects.${ownProps.openData.objId}.body`);\r\n            objLoading = obj === undefined\r\n            break;\r\n        default:\r\n            opPath = '';\r\n            obj = undefined;\r\n            objLoading = false\r\n    }\r\n    return {\r\n        serverErrors: objectPath.get(state, `${ownProps.modalId}.${opPath}.error.errors`, undefined),\r\n        submitting: objectPath.get(state, `${ownProps.modalId}.${opPath}.working`) > 0,\r\n        submitted: objectPath.get(state, `${ownProps.modalId}.${opPath}.done`),\r\n        objLoading: objLoading,\r\n        obj: obj,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        createResource: (body) => dispatch(createResource(ownProps.modalId, body)),\r\n        updateResource: (body, id) => dispatch(updateResource(ownProps.modalId, id, body))\r\n    }\r\n}\r\n\r\nexport function withFormModal(mapPropsToValues, validationSchema, WrappedComponent) {\r\n    const answer = class extends Component {\r\n        onSubmitted = () => {\r\n          const { setSubmitting, setErrors, serverErrors, resetForm} = this.props\r\n          setSubmitting(false); \r\n          if (serverErrors) {\r\n            setErrors(serverErrors)\r\n          } else {\r\n            resetForm()\r\n          }\r\n        }\r\n\r\n        render () {\r\n            return <WrappedComponent \r\n                operation={this.props.openData.operation}\r\n                onSubmitted={this.onSubmitted}\r\n                {...this.props} \r\n            />\r\n        }\r\n    }\r\n    return withModal((withFormik({ \r\n        validationSchema: validationSchema,\r\n        handleSubmit: (values, { isSubmitting, props }) => {\r\n          if (!isSubmitting) {\r\n              const { openData, obj, modalId } = props;\r\n              const operation = openData.operation\r\n              console.log(\"////asdasd\")\r\n              if (operation === 'create' || operation === 'clone') {\r\n                  console.log(\"ENTROO\", createResource)\r\n                    \r\n                createResource(modalId, values)\r\n              } else if (operation === 'update') {\r\n                updateResource(values, obj.id)\r\n              }\r\n          }\r\n        },\r\n        mapPropsToValues:mapPropsToValues\r\n    })(answer)))\r\n}\r\n\r\nexport function withResourceModal(mapPropsToValues, name, description, validationSchema, WrappedComponent) {\r\n    const answer = class extends Component {\r\n        componentDidUpdate(prevProps) {\r\n            if ( \r\n                (this.props.obj === undefined && prevProps.obj !== undefined) ||\r\n                (this.props.obj !== undefined && prevProps.obj === undefined) || \r\n                (this.props.obj !== undefined && prevProps.obj !== undefined && prevProps.obj.id !== this.props.obj.id ) \r\n            ) {\r\n                this.props.resetForm(mapPropsToValues(this.props))\r\n            }\r\n        }\r\n\r\n        getActionName = (operation) => {\r\n            switch (operation) {\r\n                case 'create':\r\n                    return 'Crear';\r\n                case 'update':\r\n                    return 'Editar';\r\n                case 'clone':\r\n                    return 'Clonar';\r\n                default:\r\n                    return \"\";\r\n\r\n            }\r\n        }\r\n\r\n        render () {\r\n            const { modalId, submitted, dirty, resetForm, submitting, handleSubmit, objLoading, onSubmitted, operation} = this.props\r\n            return (\r\n              <FormModal\r\n                submitted={submitted}\r\n                submitting={submitting}\r\n                modalId={modalId}\r\n                onClose={() => resetForm()}\r\n                dirty={dirty}\r\n                onSubmit={handleSubmit}\r\n                name={`${this.getActionName(operation)} ${name}`}\r\n                loading={objLoading}\r\n                description={description}\r\n                onSubmitted={onSubmitted}\r\n                operation={operation}\r\n              >\r\n                <WrappedComponent\r\n                  {...this.props}\r\n                />\r\n              </FormModal>\r\n            )\r\n        }\r\n    }\r\n    return withFormModal(\r\n        mapPropsToValues,\r\n        validationSchema,\r\n        answer,\r\n    )\r\n}","import {configure} from 'react-hotkeys';\r\nimport UserModal from './UserModal';\r\n\r\nconfigure({\r\n    //logLevel:'verbose'\r\n})\r\n\r\nexport const keyMap = {\r\n  users: { name: 'Usuario', sequences: [], modalClass: UserModal },\r\n};\r\n","\r\nimport React, { Component, createContext } from \"react\";\r\nimport { GlobalHotKeys } from \"react-hotkeys\";\r\nimport { keyMap } from '../modals/keymaps'\r\n\r\n\r\nexport const ModalsContext = createContext({\r\n  isOpen: null,\r\n  toggleModal: (id) => null,\r\n  openModal: (id, data) =>  null,\r\n  closeModal: (id) => null,\r\n  openData: null,\r\n  level: null,\r\n});\r\n\r\nexport default class ModalsProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: {},\r\n      toggleModal: this.toggleModal,\r\n      openModal: this.openModal,\r\n      closeModal: this.closeModal,\r\n      openData: {},\r\n      level: -1,\r\n    };\r\n  }\r\n\r\n  setCloseModal = (id) => {\r\n      this.setState(prevState => ({\r\n          isOpen: Object.assign({}, prevState.isOpen, {[id]:undefined}),\r\n          level: prevState.level > 1 ? prevState.level - 1 : 0\r\n      }));\r\n  }\r\n\r\n  setOpenModal = (id, data) => {\r\n    console.log(keyMap, id)\r\n    this.setState(prevState => {\r\n      let answer = {\r\n        isOpen: Object.assign({}, prevState.isOpen, {[id]: true}),\r\n        level: prevState.level + 1\r\n      }\r\n      if (data) {\r\n        answer.openData = Object.assign({}, prevState.openData, {[id]:data})\r\n      }\r\n      return answer\r\n    })\r\n  }\r\n\r\n  toggleModal = (id) => {\r\n    if (this.state.isOpen[id] !== undefined) {\r\n        this.setCloseModal(id)\r\n    } else {\r\n        this.setOpenModal(id)\r\n    }\r\n  }\r\n\r\n  openModal = (id, data) => {\r\n    if (this.state.isOpen[id] === undefined) {\r\n      this.setOpenModal(id, data)\r\n    }\r\n  }\r\n\r\n  closeModal = (id) => { \r\n    if (this.state.isOpen[id] !== undefined) {\r\n      this.setCloseModal(id)\r\n    }\r\n  }\r\n\r\n  getKeyMap = (keyMap) => {\r\n    // if (this.props.ware_types.length > 0) {\r\n    //     keyMap.wares.sequences = []\r\n    //     this.props.ware_types.forEach((wt) => {\r\n    //         keyMap.wares.sequences.push(\"alt+w \" + wt.shortcut_key)\r\n    //     })\r\n    // }\r\n\r\n    // if (this.props.variant_types.length > 0) {\r\n    //     keyMap.variants.sequences = []\r\n    //     this.props.variant_types.forEach((wt) => {\r\n    //         keyMap.variants.sequences.push(\"alt+v \" + wt.shortcut_key)\r\n    //     })\r\n    // }\r\n\r\n    // if (this.props.lot_types.length > 0) {\r\n    //     keyMap.lots.sequences = []\r\n    //     this.props.lot_types.forEach((wt) => {\r\n    //         keyMap.lots.sequences.push(\"alt+l \" + wt.shortcut_key)\r\n    //     })\r\n    // }\r\n\r\n    return keyMap\r\n  }\r\n\r\n  getHandlers = (keyMap) => {\r\n    return Object.keys(keyMap).reduce((handlers, key) => { \r\n      handlers[key] = (e) => {\r\n        this.openModal(key, {key: e.key})\r\n      }\r\n      return handlers\r\n    }, {})\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const newKeyMap = this.getKeyMap(keyMap)\r\n    const newHandlers = this.getHandlers(newKeyMap)\r\n    console.log(this.state)\r\n    return (\r\n      <ModalsContext.Provider value={this.state}>\r\n        <GlobalHotKeys keyMap={newKeyMap} handlers={newHandlers} allowChanges={true}/>\r\n        {children}\r\n      </ModalsContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function withModals(WrappedComponent) {\r\n    return class extends Component {\r\n        render () {\r\n            return (\r\n                <ModalsContext.Consumer>\r\n                  {({isOpen, toggleModal, openModal, closeModal, openData }) => (\r\n                    <WrappedComponent {...this.props} \r\n                      isModalOpen={isOpen} \r\n                      toggleModal={toggleModal} \r\n                      openModal={openModal}\r\n                      closeModal={closeModal}\r\n                      openData={openData}\r\n                      modalLevel={isOpen}\r\n                    />\r\n                  )}\r\n                </ModalsContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport function withModal(WrappedComponent) {\r\n    return class extends Component {\r\n        render () {\r\n            return (\r\n                <ModalsContext.Consumer>\r\n                  {({isOpen, toggleModal, openModal, closeModal, openData}) => (\r\n                    <WrappedComponent {...this.props} \r\n                      isModalOpen={isOpen[this.props.modalId] !== undefined} \r\n                      toggleModal={() => toggleModal(this.props.modalId)}\r\n                      openModal={openModal}\r\n                      closeModal={() => closeModal(this.props.modalId)}\r\n                      openData={openData[this.props.modalId] || {}}\r\n                      modalLevel={isOpen[this.props.modalId] || 0}\r\n                    />\r\n                  )}\r\n                </ModalsContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component, Children, Fragment, cloneElement } from 'react';\r\nimport {withModals} from \"../contexts/ModalsContext\";\r\nimport objectPath from \"../libs/object-path\";\r\nimport  { Plus } from 'react-feather'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        submitted: objectPath.get(state, `${ownProps.resource}.create.done`),\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {}\r\n}\r\n\r\nclass AddButton extends Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { submitted, onDone } = this.props;\r\n        if (!prevProps.submitted && submitted === true && onDone) {\r\n            onDone()\r\n        }\r\n    }\r\n    \r\n    handleClick = () => {\r\n        console.log(\"ENTROO\", this.props.resource, this.props)\r\n        this.props.openModal(this.props.resource, {operation: 'create', initialValues: this.props.initialValues});\r\n    }\r\n\r\n    render() {\r\n        const { children, disabled } = this.props;\r\n        if (children) {\r\n            return (\r\n                <Fragment>\r\n                    {Children.map(children, child => (\r\n                      cloneElement(child, {\r\n                        onClick: disabled? null : this.handleClick,\r\n                      })))\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n        return <Plus size={24} className=\"ml-2 clickable\" onClick={disabled ? null : this.handleClick} title={'Agregar'}/>\r\n    }\r\n}\r\n\r\nexport default withModals((AddButton));\r\n","import React, { Fragment } from 'react'\r\nimport { keyMap } from './keymaps'\r\n\r\n// para agregaar un nuevo modal al sistema importarlo y agregalo uno abao\r\n// del otro con su id correspondiente.\r\nexport function Modals(props) {\r\n    return (\r\n        <Fragment>\r\n            { Object.keys(keyMap).map((key) => {\r\n                const Modal = keyMap[key].modalClass\r\n                return <Modal key={key} modalId={key}/>\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { MapPin } from 'react-feather'\r\n\r\nclass Nav extends React.Component {\r\n    render() {\r\n        return (\r\n         <header class=\"header\">\r\n            <div class=\"container\" style={{height:60}}>\r\n               <div class=\"row\">\r\n                  <div class=\"col\">\r\n                        <div class=\"header_content d-flex flex-row align-items-center justify-content-start\">\r\n                           <div class=\"logo mt-n2\">\r\n                              <MapPin color=\"white\" size={30}/>\r\n                           </div>\r\n                           <nav className=\"main_nav ml-auto mt-n2\" >\r\n                              <ul>\r\n                                    <li class=\"active\"><a href=\"index.html\">Home</a></li>\r\n                              </ul>\r\n                           </nav>\r\n                           \r\n                           {/* <div class=\"hamburger ml-auto\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></div> */}\r\n                        </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n         <footer class=\"footer\" style={{backgroundColor:\"blue\"}}>\r\n            <div class=\"footer_bar\">\r\n               <div className=\"container\">\r\n                  <div class=\"row\">\r\n                     <div class=\"col\">\r\n                        <div>\r\n                           <div className=\"mt-2 mb-2 white\" >\r\n                              © {\"2020 Routear\"}\r\n                           </div>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component, Fragment } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport Footer from '../components/Footer';\r\n\r\nclass Home extends Component {\r\n    \r\n    render () {\r\n        return (\r\n            <Fragment>\r\n               <Nav/>\r\n\r\n               <Footer/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport AddButton from './components/AddButton';\r\nimport { Button } from 'reactstrap';\r\nimport ModalsProvider from './contexts/ModalsContext';\r\nimport { Modals } from './modals/index'\r\nimport Home from './views/Home';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ModalsProvider>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <AddButton resource={\"users\"}>\r\n            <Button color={\"primary\"}>Prueba</Button>\r\n          </AddButton>\r\n          <Modals/>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n        <Home/>\r\n      </div>\r\n    </ModalsProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux' \r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport { requestIsLogged } from './AuthFlow'\r\n\r\nimport { UserFlow } from './UserFlow'\r\n\r\nconst flows = [\r\n    new UserFlow('users'),\r\n]\r\n\r\nconst mainReducer = combineReducers(\r\n    flows.reduce((answer, flow) => { answer[flow.rootPath]=flow.reducer; return answer }, {})\r\n)\r\n\r\nconst sagasMiddleware = createSagaMiddleware()\r\n\r\nlet store = createStore(\r\n  mainReducer, \r\n  applyMiddleware(sagasMiddleware)\r\n)\r\n\r\nif (process.env.NODE_ENV !== 'production')  {\r\n    const reduxLogger = createLogger({});\r\n    store = createStore(\r\n      mainReducer, \r\n      applyMiddleware(sagasMiddleware, reduxLogger)\r\n      // applyMiddleware(sagasMiddleware)\r\n    )\r\n}\r\n\r\n\r\nflows.forEach(flow => sagasMiddleware.run(flow.saga))\r\n\r\nstore.dispatch(requestIsLogged())\r\n\r\nexport { store }\r\n","import { ResourceFlow } from './ResourceFlow'\r\n\r\nexport class UserFlow extends ResourceFlow {\r\n    constructor(rootPath) {\r\n        super(rootPath, 'users')\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./index.scss\"\r\nimport * as Sentry from '@sentry/browser';\r\nimport settings from './settings'\r\nimport { store } from './flows'\r\nimport { Provider } from 'react-redux'\r\nimport \"./plugins/font-awesome-4.7.0/css/font-awesome.min.css\"\r\nimport \"./plugins/OwlCarousel2-2.2.1/owl.carousel.css\"\r\nimport \"./plugins/OwlCarousel2-2.2.1/owl.theme.default.css\"\r\nimport \"./plugins/OwlCarousel2-2.2.1/animate.css\"\r\nimport \"./styles/main_styles.css\"\r\nimport \"./styles/responsive.css\"\r\n// Sentry\r\nSentry.init({ dsn: settings.SETNRY_DSN });\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}