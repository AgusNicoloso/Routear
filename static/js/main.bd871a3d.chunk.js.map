{"version":3,"sources":["forms/ErrorMessage.jsx","forms/inputs/InputText.jsx","components/FullSpinner.jsx","components/InlineSpinner.jsx","modals/FormModal.jsx","libs/object-path.js","flows/ResourceFlow/actions.js","settings.js","libs/object-path-immutable.js","forms/FormGroup.jsx","forms/LabelledGroup.jsx","modals/UserModal.jsx","contexts/ResourceModalContext.jsx","modals/keymaps.js","contexts/ModalsContext.jsx","components/AddButton.jsx","modals/index.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["connect","name","skipTouch","formik","error","errors","touch","getIn","touched","className","classNames","InputText","renderField","props","placeholder","isSubmitting","innerRef","password","disabled","submitOnChnage","prefix","notErrorMessage","others","extraCalassNames","split","type","value","values","this","InputGroup","InputGroupAddon","addonType","Component","FullSpinner","sizeUnit","size","color","React","InlineSpinner","withModal","focus","isModalOpen","firstInput","current","timerId","setTimeout","onClose","toggleModal","clearTimeout","prevProps","submitted","submitting","closeModal","onSubmitted","children","onSubmit","loading","modalLevel","dirty","isOpen","toggle","fade","ModalBody","ModalHeader","working","Form","ModalFooter","Button","onClick","toStr","Object","prototype","toString","hasOwnProperty","obj","prop","call","isEmpty","isArray","length","i","Array","getKey","key","startsWith","endsWith","innerKey","slice","intKey","parseInt","factory","options","objectPath","keys","reduce","proxy","bind","hasShallowProperty","includeInheritedProps","getShallowProperty","set","path","doNotReplace","map","currentPath","currentValue","has","j","ensureExists","insert","at","arr","get","splice","empty","isBoolean","isObject","push","apply","arguments","coalesce","paths","defaultValue","len","nextObj","del","mod","create","withInheritedProps","createResource","resource","body","console","log","action","updateResource","id","assign","API_URL","process","SENTRY_DSN","_hasOwnProperty","isNumber","isString","assignToObj","target","source","clone","createIfEmpty","assumeArray","deepMerge","dest","src","isPlainObject","merged","changeImmutable","changeCallback","api","clonedObj","finalPath","updater","concat","first","Error","undefined","objectPathImmutable","method","committed","transaction","args","FormGroup","LabelledGroup","htmlFor","withResourceModal","mapPropsToValues","description","validationSchema","WrappedComponent","answer","getActionName","operation","resetForm","modalId","handleSubmit","objLoading","setSubmitting","setErrors","serverErrors","openData","withFormik","withFormModal","username","first_name","last_name","email","confirmPassword","roles","is_master","Yup","shape","required","label","min","test","parent","createRef","Row","Col","configure","keyMap","users","sequences","modalClass","UserModal","ModalsContext","createContext","openModal","data","level","ModalsProvider","setCloseModal","setState","prevState","setOpenModal","state","getKeyMap","getHandlers","handlers","e","newKeyMap","newHandlers","Provider","allowChanges","Consumer","AddButton","handleClick","initialValues","onDone","Children","child","cloneElement","title","withModals","Modals","Modal","App","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"mXAsBeA,eAlBM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,OAK9BC,EAAQD,EAAOE,OAAQF,EAAOE,OAAOJ,GAAQ,GAC7CK,EAAQC,YAAMJ,EAAOK,QAASP,GACpC,OAAIG,IAAUE,GAASJ,GAEf,kBAAC,WAAD,KACI,yBAAKO,UAAWC,IAAW,kBAAmB,CAAE,aAAcN,KAA9D,KACA,yBAAKK,UAAU,oBAAoBL,IAIxC,Q,kBCbLO,E,4MACFC,YAAc,WAAO,IAAD,EAEgE,EAAKC,MAD9EV,EADS,EACTA,OAAQF,EADC,EACDA,KAAoBa,GADnB,EACKC,aADL,EACmBD,aAAaE,EADhC,EACgCA,SAAUC,EAD1C,EAC0CA,SACrDC,EAFW,EAEXA,SAAmDT,GAFxC,EAEDU,eAFC,EAEeC,OAFf,EAEuBC,gBAFvB,EAEwCZ,WAAca,EAFtD,uJAGVC,EAAmBd,EAAYA,EAAUe,MAAM,KAAM,GAC3D,OAAO,kBAAC,IAAD,eACHC,KAAMR,EAAS,WAAW,OAC1BhB,KAAMA,EACNa,YAAaA,EACbI,SAAUA,GAAYf,EAAOY,aAC7BC,SAAUA,EACVP,UAAWC,IAAU,WAAV,GAAW,gBAAX,mBAA8Ba,GAA9B,CAAgD,CAAE,aAAchB,YAAMJ,EAAOE,OAAQJ,OAChGyB,MAAOnB,YAAMJ,EAAOwB,OAAQ1B,IAAS,IACjCqB,K,uDAIF,IAAD,EACmCM,KAAKf,MAAtCZ,EADF,EACEA,KAAMmB,EADR,EACQA,OAAQC,EADhB,EACgBA,gBACrB,OACI,kBAAC,WAAD,KACKD,EACG,kBAACS,EAAA,EAAD,KACKD,KAAKhB,cACN,kBAACkB,EAAA,EAAD,CAAiBC,UAAU,UAAUX,GACrC,kBAAC,EAAD,CAAcnB,KAAMA,KAEtB,kBAAC,WAAD,KACG2B,KAAKhB,eACJS,GACE,kBAAC,EAAD,CAAcpB,KAAMA,U,GA9BxB+B,aAwCThC,cAAQW,G,qDC5BRsB,E,uKAZP,OACI,yBAAKxB,UAAU,iBACX,kBAAC,aAAD,CACIyB,SAAU,KACVC,KAAM,GACNC,MAAO,iB,GAPDC,IAAML,WCQjBM,E,uKANP,OACI,kBAAC,aAAD,CAAYJ,SAAU,KAAMC,KAAMP,KAAKf,MAAMsB,KAAMC,MAAO,gB,GAH1CC,IAAML,W,SCgFnBO,K,4MAzDXC,MAAQ,WAAO,IAAD,EACwB,EAAK3B,MAAjC4B,EADI,EACJA,YAAaC,EADT,EACSA,WACjBA,GAAcA,EAAWC,QAC3BD,EAAWC,QAAQH,QACVC,IACT,EAAKG,QAAUC,WAAW,EAAKL,MAAO,O,EAI1CM,QAAU,WACR,EAAKjC,MAAMkC,cACX,EAAKlC,MAAMiC,W,qEA5BTE,aAAapB,KAAKgB,W,yCAIHK,GAAY,IAAD,EAC+BrB,KAAKf,MAAxDqC,EADoB,EACpBA,UAAWC,EADS,EACTA,WAAYV,EADH,EACGA,YAAaW,EADhB,EACgBA,WACxCH,EAAUE,aAA6B,IAAfA,GAC1BvB,KAAKf,MAAMwC,cAERJ,EAAUC,YAA2B,IAAdA,GAC1BE,KAEGH,EAAUR,aAAeA,IAC5Bb,KAAKgB,QAAUC,WAAWjB,KAAKY,MAAO,Q,+BAkB/B,IAAD,EACiFZ,KAAKf,MAAvF4B,EADC,EACDA,YAAaM,EADZ,EACYA,YAAaO,EADzB,EACyBA,SAAUC,EADnC,EACmCA,SAAUtD,EAD7C,EAC6CA,KAAMuD,EADnD,EACmDA,QAASC,EAD5D,EAC4DA,WAAYC,EADxE,EACwEA,MAChF,OACE,kBAAC,IAAD,CACEvB,KAAK,KACLwB,OAAQlB,EACRmB,OAAQb,EACRc,MAAM,EACNpD,UAAWgD,GAAc,EAAd,YAAuBA,GAAc,OAE7CD,EACC,kBAACM,EAAA,EAAD,CAAWrD,UAAU,OAAM,kBAAC,EAAD,OAC3B,kBAAC,WAAD,KACE,kBAACsD,EAAA,EAAD,CAAaH,OAAQb,GAAc9C,EAE9B,wBAAIQ,UAAU,uCACXiD,GACA,wBAAIjD,UAAU,+BAA8B,uBAAGA,UAAU,QAAO,+BAAO,gCAAM,sBAAN,QAEvEmB,KAAKf,MAAMmD,QAAU,GACnB,wBAAIvD,UAAU,yBAAd,IAAuC,kBAAC,EAAD,CAAe0B,KAAM,KAA5D,OAIV,kBAAC2B,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAMV,SAAUA,GACXD,EACD,2BAAO7B,KAAK,SAAShB,UAAU,WAC/B,kBAAC,EAAD,CAAcR,KAAK,mBAAmBC,WAAW,MAGzD,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQ/B,MAAM,UAAUX,KAAK,SACrB2C,QAASb,GAAW,WAAoB,IAChD,kBAACY,EAAA,EAAD,CAAQ/B,MAAM,UAAU3B,UAAU,aAAa2D,QAASxC,KAAKkB,SAAU,mB,GAnEnEd,cCRpBqC,G,MAAQC,OAAOC,UAAUC,UAC7B,SAASC,EAAeC,EAAKC,GAC3B,OAAU,MAAPD,GAIIJ,OAAOC,UAAUE,eAAeG,KAAKF,EAAKC,GAGnD,SAASE,EAAQnD,GACf,IAAKA,EACH,OAAO,EAET,GAAIoD,EAAQpD,IAA2B,IAAjBA,EAAMqD,OACxB,OAAO,EACJ,GAAqB,kBAAVrD,EAAoB,CAClC,IAAK,IAAIsD,KAAKtD,EACV,GAAI+C,EAAe/C,EAAOsD,GACtB,OAAO,EAGf,OAAO,EAEX,OAAO,EAGT,SAASR,EAAS/C,GAChB,OAAO4C,EAAMO,KAAKnD,GAOpB,IAAIqD,EAAUG,MAAMH,SAAW,SAASJ,GAEtC,MAA2B,mBAApBL,EAAMO,KAAKF,IAOpB,SAASQ,EAAOC,GACd,GAAIA,EAAIC,WAAW,MAAQD,EAAIE,SAAS,KAAM,CAC5C,IAAMC,EAAWH,EAAII,MAAM,EAAEJ,EAAIJ,OAAS,GACtCS,EAASC,SAASH,GACtB,GAAIE,EAAOhB,aAAec,EACxB,OAAOE,EAGX,OAAOL,EAGT,SAASO,EAAQC,GACfA,EAAUA,GAAW,GAErB,IAAIC,EAAa,SAAbA,EAAsBlB,GACxB,OAAOJ,OAAOuB,KAAKD,GAAYE,QAAO,SAASC,EAAOpB,GACpD,MAAY,WAATA,GAK6B,oBAArBiB,EAAWjB,KACpBoB,EAAMpB,GAAQiB,EAAWjB,GAAMqB,KAAKJ,EAAYlB,IALzCqB,IASR,KAGL,SAASE,EAAmBvB,EAAKC,GAC/B,OAAQgB,EAAQO,uBAA0C,kBAATvB,GAAqBM,MAAMH,QAAQJ,IAASD,EAAeC,EAAKC,GAGnH,SAASwB,EAAmBzB,EAAKC,GAC/B,GAAIsB,EAAmBvB,EAAKC,GAC1B,OAAOD,EAAIC,GAIf,SAASyB,EAAI1B,EAAK2B,EAAM3E,EAAO4E,GAI7B,GAHoB,kBAATD,IACTA,EAAO,CAACA,KAELA,GAAwB,IAAhBA,EAAKtB,OAChB,OAAOL,EAET,GAAoB,kBAAT2B,EACT,OAAOD,EAAI1B,EAAK2B,EAAK7E,MAAM,KAAK+E,IAAIrB,GAASxD,EAAO4E,GAEtD,IAAIE,EAAcH,EAAK,GACnBI,EAAeN,EAAmBzB,EAAK8B,GAC3C,OAAoB,IAAhBH,EAAKtB,aACc,IAAjB0B,GAA4BH,IAC9B5B,EAAI8B,GAAe9E,GAEd+E,SAGY,IAAjBA,IAEoB,kBAAZJ,EAAK,GACb3B,EAAI8B,GAAe,GAEnB9B,EAAI8B,GAAe,IAIhBJ,EAAI1B,EAAI8B,GAAcH,EAAKd,MAAM,GAAI7D,EAAO4E,IAiKrD,OA9JAV,EAAWc,IAAM,SAAUhC,EAAK2B,GAO9B,GANoB,kBAATA,EACTA,EAAO,CAACA,GACiB,kBAATA,IAChBA,EAAOA,EAAK7E,MAAM,OAGf6E,GAAwB,IAAhBA,EAAKtB,OAChB,QAASL,EAGX,IAAK,IAAIM,EAAI,EAAGA,EAAIqB,EAAKtB,OAAQC,IAAK,CACpC,IAAI2B,EAAIzB,EAAOmB,EAAKrB,IAEpB,KAAiB,kBAAN2B,GAAkB7B,EAAQJ,IAAQiC,EAAIjC,EAAIK,SAClDY,EAAQO,sBAAyBS,KAAKrC,OAAOI,GAAQD,EAAeC,EAAKiC,KAG1E,OAAO,EAFPjC,EAAMA,EAAIiC,GAMd,OAAO,GAGTf,EAAWgB,aAAe,SAAUlC,EAAK2B,EAAM3E,GAC7C,OAAO0E,EAAI1B,EAAK2B,EAAM3E,GAAO,IAG/BkE,EAAWQ,IAAM,SAAU1B,EAAK2B,EAAM3E,EAAO4E,GAC3C,OAAOF,EAAI1B,EAAK2B,EAAM3E,EAAO4E,IAG/BV,EAAWiB,OAAS,SAAUnC,EAAK2B,EAAM3E,EAAOoF,GAC9C,IAAIC,EAAMnB,EAAWoB,IAAItC,EAAK2B,GAC9BS,IAAOA,EACFhC,EAAQiC,IAEXnB,EAAWQ,IAAI1B,EAAK2B,EADpBU,EAAM,IAGRA,EAAIE,OAAOH,EAAI,EAAGpF,IAGpBkE,EAAWsB,MAAQ,SAASxC,EAAK2B,GAQ/B,IAAI3E,EAAOsD,EAPX,IAAIH,EAAQwB,KAGD,MAAP3B,IAKEhD,EAAQkE,EAAWoB,IAAItC,EAAK2B,KAAlC,CAIA,GAAqB,kBAAV3E,EACT,OAAOkE,EAAWQ,IAAI1B,EAAK2B,EAAM,IAC5B,GApIX,SAAmB3B,GACjB,MAAsB,mBAARA,GAAuC,qBAAlBF,EAASE,GAmI/ByC,CAAUzF,GACnB,OAAOkE,EAAWQ,IAAI1B,EAAK2B,GAAM,GAC5B,GAAqB,kBAAV3E,EAChB,OAAOkE,EAAWQ,IAAI1B,EAAK2B,EAAM,GAC5B,GAAIvB,EAAQpD,GACjBA,EAAMqD,OAAS,MACV,KAnJX,SAAkBL,GAChB,MAAsB,kBAARA,GAAsC,oBAAlBF,EAASE,GAkJ9B0C,CAAS1F,GAOlB,OAAOkE,EAAWQ,IAAI1B,EAAK2B,EAAM,MANjC,IAAKrB,KAAKtD,EACJuE,EAAmBvE,EAAOsD,WACrBtD,EAAMsD,MAQrBY,EAAWyB,KAAO,SAAU3C,EAAK2B,GAC/B,IAAIU,EAAMnB,EAAWoB,IAAItC,EAAK2B,GACzBvB,EAAQiC,IAEXnB,EAAWQ,IAAI1B,EAAK2B,EADpBU,EAAM,IAIRA,EAAIM,KAAKC,MAAMP,EAAK9B,MAAMV,UAAUgB,MAAMX,KAAK2C,UAAW,KAG5D3B,EAAW4B,SAAW,SAAU9C,EAAK+C,EAAOC,GAG1C,IAFA,IAAIhG,EAEKsD,EAAI,EAAG2C,EAAMF,EAAM1C,OAAQC,EAAI2C,EAAK3C,IAC3C,QAAgD,KAA3CtD,EAAQkE,EAAWoB,IAAItC,EAAK+C,EAAMzC,KACrC,OAAOtD,EAIX,OAAOgG,GAGT9B,EAAWoB,IAAM,SAAUtC,EAAK2B,EAAMqB,GAIpC,GAHoB,kBAATrB,IACTA,EAAO,CAACA,KAELA,GAAwB,IAAhBA,EAAKtB,OAChB,OAAOL,EAET,GAAW,MAAPA,EACF,OAAOgD,EAET,GAAoB,kBAATrB,EACT,OAAOT,EAAWoB,IAAItC,EAAK2B,EAAK7E,MAAM,KAAMkG,GAG9C,IAAIlB,EAActB,EAAOmB,EAAK,IAC1BuB,EAAUzB,EAAmBzB,EAAK8B,GACtC,YAAgB,IAAZoB,EACKF,EAGW,IAAhBrB,EAAKtB,OACA6C,EAGFhC,EAAWoB,IAAItC,EAAI8B,GAAcH,EAAKd,MAAM,GAAImC,IAGzD9B,EAAWiC,IAAM,SAAanD,EAAK2B,GAKjC,GAJoB,kBAATA,IACTA,EAAO,CAACA,IAGC,MAAP3B,EACF,OAAOA,EAGT,GAAIG,EAAQwB,GACV,OAAO3B,EAET,GAAmB,kBAAT2B,EACR,OAAOT,EAAWiC,IAAInD,EAAK2B,EAAK7E,MAAM,MAGxC,IAAIgF,EAActB,EAAOmB,EAAK,IAC9B,OAAKJ,EAAmBvB,EAAK8B,GAIV,IAAhBH,EAAKtB,OAOCa,EAAWiC,IAAInD,EAAI8B,GAAcH,EAAKd,MAAM,KAN/CT,EAAQJ,GACVA,EAAIuC,OAAOT,EAAa,UAEjB9B,EAAI8B,GAMR9B,GAbEA,GAgBJkB,EAGT,IAAIkC,EAAMpC,IACVoC,EAAIC,OAASrC,EACboC,EAAIE,mBAAqBtC,EAAQ,CAACQ,uBAAuB,ICzOlD,SAAS+B,EAAeC,EAAUC,EAAM9B,GAE3C,OADA+B,QAAQC,IAAIH,EAAUC,EAAM9B,GACrB,CACH5E,KA5Cc,SA6Cd6G,OA7Cc,SA8CdJ,WACAC,OACA9B,QAcD,SAASkC,EAAeL,EAAUM,EAAIL,GACzC,MAAO,CACH1G,KA9Dc,SA+Dd6G,OA/Dc,SAgEdJ,WACAM,KACAL,Q,4BC7DS7D,OAAOmE,OAAO,GANnB,CACRC,QAASC,yBACTC,WAAY,KAFhB,I,iBCDIC,EAAkBvE,OAAOC,UAAUE,eAEvC,SAASI,EAASnD,GAChB,GAAIoH,EAASpH,GACX,OAAO,EAET,IAAKA,EACH,OAAO,EAET,GAAIoD,EAAQpD,IAA2B,IAAjBA,EAAMqD,OAC1B,OAAO,EACF,IAAKgE,EAASrH,GAAQ,CAC3B,IAAK,IAAIsD,KAAKtD,EACZ,GAAImH,EAAgBjE,KAAKlD,EAAOsD,GAC9B,OAAO,EAGX,OAAO,EAET,OAAO,EAIT,SAAS8D,EAAUpH,GACjB,MAAwB,kBAAVA,EAGhB,SAASqH,EAAUrE,GACjB,MAAsB,kBAARA,EAGhB,SAASI,EAASJ,GAChB,OAAOO,MAAMH,QAAQJ,GAGvB,SAASsE,EAAaC,EAAQC,GAC5B,IAAK,IAAI/D,KAAO+D,EACVL,EAAgBjE,KAAKsE,EAAQ/D,KAC/B8D,EAAO9D,GAAO+D,EAAO/D,IAGzB,OAAO8D,EAGT,SAAS/D,EAAQC,GACf,GAAIA,EAAIC,WAAW,MAAQD,EAAIE,SAAS,KAAM,CAC1C,IAAMC,EAAWH,EAAII,MAAM,EAAEJ,EAAIJ,OAAS,GACtCS,EAASC,SAASH,GACtB,GAAIE,EAAOhB,aAAec,EACxB,OAAOE,EAGX,OAAOL,EAkCX,SAASgE,GAAOzE,EAAK0E,EAAeC,GAClC,OAAW,MAAP3E,EACE0E,EACEC,EACK,GAGF,GAGF3E,EACEI,EAAQJ,GACVA,EAAIa,QAGNyD,EAAY,GAAItE,GAGzB,SAAS4E,GAAWC,EAAMC,GACxB,GAAID,IAASC,GAAOC,IAAcF,IAASE,IAAcD,GAAM,CAC7D,IAAIE,EAAS,GACb,IAAK,IAAIvE,KAAOoE,EACVA,EAAK9E,eAAeU,KAClBqE,EAAI/E,eAAeU,GACrBuE,EAAOvE,GAAOmE,GAAUC,EAAKpE,GAAMqE,EAAIrE,IAEvCuE,EAAOvE,GAAOoE,EAAKpE,IAKzB,IAAKA,KAAOqE,EACNA,EAAI/E,eAAeU,KACrBuE,EAAOvE,GAAOmE,GAAUC,EAAKpE,GAAMqE,EAAIrE,KAG3C,OAAOuE,EAET,OAAOF,EAGT,SAASG,GAAiBJ,EAAMC,EAAKnD,EAAMuD,GAIzC,GAHId,EAASzC,KACXA,EAAO,CAACA,IAENxB,EAAQwB,GACV,OAAOmD,EAET,GAAIT,EAAS1C,GACX,OAAOsD,GAAgBJ,EAAMC,EAAKnD,EAAK7E,MAAM,KAAK+E,IAAIrB,GAAS0E,GAEjE,IAAIpD,EAAcH,EAAK,GAMvB,OAJKkD,GAAQA,IAASC,IACpBD,EAAOJ,GAAMK,GAAK,EAAMV,EAAStC,KAGf,IAAhBH,EAAKtB,OACA6E,EAAeL,EAAM/C,IAGnB,MAAPgD,IACFA,EAAMA,EAAIhD,IAGZ+C,EAAK/C,GAAemD,GAAgBJ,EAAK/C,GAAcgD,EAAKnD,EAAKd,MAAM,GAAIqE,GAEpEL,GAGT,IAAIM,GAAM,CACVA,IAAU,SAAcN,EAAMC,EAAKnD,EAAM3E,GACvC,OAAImD,EAAQwB,GACH3E,EAEFiI,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAE3D,OADAD,EAAUC,GAAarI,EAChBoI,MAIXD,OAAa,SAAiBN,EAAMC,EAAKnD,EAAM2D,GAC7C,OAAInF,EAAQwB,GACH2D,EAAQb,GAAMK,IAEhBG,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAE3D,OADAD,EAAUC,GAAaC,EAAQF,EAAUC,IAClCD,MAIXD,KAAW,SAAeN,EAAMC,EAAKnD,GACnC,IAAI1E,EAASsD,MAAMV,UAAUgB,MAAMX,KAAK2C,UAAW,GACnD,OAAI1C,EAAQwB,GACLvB,EAAQ0E,GAGJA,EAAIS,OAAOtI,GAFXA,EAKJgI,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAM3D,OALKjF,EAAQgF,EAAUC,IAGrBD,EAAUC,GAAaD,EAAUC,GAAWE,OAAOtI,GAFnDmI,EAAUC,GAAapI,EAIlBmI,MAIXD,OAAa,SAAiBN,EAAMC,EAAKnD,EAAM3E,EAAOoF,GAEpD,GADAA,IAAOA,EACHjC,EAAQwB,GAAO,CACjB,IAAKvB,EAAQ0E,GACX,MAAO,CAAC9H,GAGV,IAAIwI,EAAQV,EAAIjE,MAAM,EAAGuB,GAEzB,OADAoD,EAAM7C,KAAK3F,GACJwI,EAAMD,OAAOT,EAAIjE,MAAMuB,IAEhC,OAAO6C,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAC3D,IAAIhD,EAAM+C,EAAUC,GACpB,IAAKjF,EAAQiC,GAAM,CACjB,GAAW,MAAPA,GAA8B,qBAARA,EACxB,MAAM,IAAIoD,MAAM,YAAc9D,EAAO,sCAAwCA,GAE/EU,EAAM,GAGR,IAAImD,EAAQnD,EAAIxB,MAAM,EAAGuB,GAGzB,OAFAoD,EAAM7C,KAAK3F,GACXoI,EAAUC,GAAaG,EAAMD,OAAOlD,EAAIxB,MAAMuB,IACvCgD,MAIXD,IAAU,SAAcN,EAAMC,EAAKnD,GACjC,IAAIxB,EAAQwB,GAGZ,OAAOsD,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAU3D,OATI9E,MAAMH,QAAQgF,QACaM,IAAzBN,EAAUC,IACZD,EAAU7C,OAAO8C,EAAW,GAG1BD,EAAUrF,eAAesF,WACpBD,EAAUC,GAGdD,MAIXD,OAAa,SAAiBN,EAAMC,EAAKnD,EAAM6C,GAC7C,OAAIrE,EAAQwB,GACNxB,EAAQqE,GACHM,EAEFR,EAAYG,GAAMK,GAAMN,GAE1BS,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAC3Db,EAAS5E,OAAO4E,GAChB,IAAID,EAASE,GAAMW,EAAUC,IAAY,GAIzC,OAHAf,EAAYC,EAAQC,GAEpBY,EAAUC,GAAad,EAChBa,MAIXD,MAAY,SAAiBN,EAAMC,EAAKnD,EAAM6C,GAC5C,OAAIrE,EAAQwB,GACNxB,EAAQqE,GACHM,EAEFF,GAAUE,EAAKN,GAEjBS,GAAgBJ,EAAMC,EAAKnD,GAAM,SAAUyD,EAAWC,GAG3D,OAFAb,EAAS5E,OAAO4E,GAChBY,EAAUC,GAAaT,GAAUQ,EAAUC,GAAYb,GAChDY,OAIOxF,OAAOuB,KAAKgE,IAAK/D,QAAO,SAAUuE,EAAqBC,GAGvE,OAFAD,EAAoBC,GAAUT,GAAIS,GAAQtE,KAAK,KAAM,MAE9CqE,KA5NiB,SAAUb,GAClC,IAAID,EAAOC,EACPe,GAAY,EAEZC,EAAclG,OAAOuB,KAAKgE,IAAK/D,QAAO,SAAUC,EAAOpB,GAgBzD,MAdyB,oBAAdkF,GAAIlF,KACboB,EAAMpB,GAAQ,WACZ,IAAI8F,EAAO,CAAClB,EAAMC,GAAKS,OAAOhF,MAAMV,UAAUgB,MAAMX,KAAK2C,YAEzD,GAAIgD,EACF,MAAM,IAAIJ,MAAM,eAAiBxF,EAAO,kBAK1C,OAFA4E,EAAOM,GAAIlF,GAAM2C,MAAM,KAAMmD,GAEtBD,IAIJzE,IACN,IAOH,OALAyE,EAAY9I,MAAQ,WAElB,OADA6I,GAAY,EACLhB,GAGFiB,K,aCnFT,IAQeE,GARG,SAAC,GAAgB,IAAfpH,EAAc,EAAdA,SAChB,OACI,yBAAK7C,UAAU,cACV6C,ICOEqH,GATO,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAAS3K,EAAoB,EAApBA,KAAMqD,EAAc,EAAdA,SACnC,OACI,kBAAC,GAAD,KACI,2BAAOsH,QAASA,GAAU3K,EAA1B,KACCqD,I,6BCkGEuH,GCNR,SAA2BC,EAAkB7K,EAAM8K,EAAaC,EAAkBC,GAAmB,IAClGC,EAAM,4MAWRC,cAAgB,SAACC,GACb,OAAQA,GACJ,IAAK,SACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,IAAK,QACD,MAAO,SACX,QACI,MAAO,KApBX,iEACWnI,SAESmH,IAAnBxI,KAAKf,MAAM6D,UAAuC0F,IAAlBnH,EAAUyB,UACvB0F,IAAnBxI,KAAKf,MAAM6D,UAAuC0F,IAAlBnH,EAAUyB,UACvB0F,IAAnBxI,KAAKf,MAAM6D,UAAuC0F,IAAlBnH,EAAUyB,KAAqBzB,EAAUyB,IAAI8D,KAAO5G,KAAKf,MAAM6D,IAAI8D,KAEpG5G,KAAKf,MAAMwK,UAAUP,EAAiBlJ,KAAKf,UAP3C,+BAyBG,IAAD,EACwGe,KAAKf,MAA3GyK,EADF,EACEA,QAASpI,EADX,EACWA,UAAWQ,EADtB,EACsBA,MAAO2H,EAD7B,EAC6BA,UAAWlI,EADxC,EACwCA,WAAYoI,EADpD,EACoDA,aAAcC,EADlE,EACkEA,WAAYnI,EAD9E,EAC8EA,YAAa+H,EAD3F,EAC2FA,UACjG,OACE,kBAAC,EAAD,CACElI,UAAWA,EACXC,WAAYA,EACZmI,QAASA,EACTxI,QAAS,kBAAMuI,KACf3H,MAAOA,EACPH,SAAUgI,EACVtL,KAAI,UAAK2B,KAAKuJ,cAAcC,GAAxB,YAAsCnL,GAC1CuD,QAASgI,EACTT,YAAaA,EACb1H,YAAaA,EACb+H,UAAWA,GAEX,kBAACH,EACKrJ,KAAKf,YA1CX,GAAiBmB,aAgD7B,OApGG,SAAuB8I,EAAkBE,EAAkBC,GAAmB,IAC3EC,EAAM,4MACR7H,YAAc,WAAO,IAAD,EAC2C,EAAKxC,MAA1D4K,EADU,EACVA,cAAeC,EADL,EACKA,UAAWC,EADhB,EACgBA,aAAcN,EAD9B,EAC8BA,UAChDI,GAAc,GACVE,EACFD,EAAUC,GAEVN,KAPI,uDAYJ,OAAO,kBAACJ,EAAD,eACHG,UAAWxJ,KAAKf,MAAM+K,SAASR,UAC/B/H,YAAazB,KAAKyB,aACdzB,KAAKf,YAfT,GAAiBmB,aAmB7B,OAAOO,GAAWsJ,YAAW,CACzBb,iBAAkBA,EAClBO,aAAc,SAAC5J,EAAD,GAAsC,IAA3BZ,EAA0B,EAA1BA,aAAcF,EAAY,EAAZA,MACrC,IAAKE,EAAc,CAAC,IACR6K,EAA2B/K,EAA3B+K,SAAUlH,EAAiB7D,EAAjB6D,IAAK4G,EAAYzK,EAAZyK,QACjBF,EAAYQ,EAASR,UACT,WAAdA,GAAwC,UAAdA,GAC1BhD,QAAQC,IAAI,SAAUJ,GAcxBA,EAAeqD,EAAS3J,IACD,WAAdyJ,GACT7C,EAAe5G,EAAQ+C,EAAI8D,MAInCsC,iBAAiBA,GA3BHe,CA4BfX,IAoDIY,CACHhB,EACAE,EACAE,GD9COL,EAvFU,SAAC,GAAW,IAAVnG,EAAS,EAATA,IACvB,MAAO,CACCqH,SAAUrH,EAAMA,EAAIqH,SAAW,GAC/BC,WAAYtH,EAAMA,EAAIsH,WAAa,GACnCC,UAAWvH,EAAMA,EAAIuH,UAAY,GACjCC,MAAOxH,EAAMA,EAAIwH,MAAQ,GACzBjL,SAAU,GACVkL,gBAAiB,GACjBC,MAAO1H,GAAOA,EAAI0H,MAAQ1H,EAAI0H,MAAO,GACrCC,YAAW3H,GAAKA,EAAI2H,aAgF5B,UACA,IA7EqB,SAACxL,GACtB,OAAOyL,OAAaC,MAAM,CACtBP,WAAYM,OACPE,SAAS,4BACdT,SAAUO,OACLE,SAAS,6BACdN,MAAOI,OACFE,SAAS,2BACTN,MAAM,sCACXjL,SAAUqL,OAELG,MAAM,iBACNC,IAAI,EAAG,yBACZP,gBAAiBG,OAEZG,MAAM,2BACNE,KAAK,kBAAmB,mCAAgC,SAASjL,GAChE,OAAOE,KAAKgL,OAAO3L,WAAaS,S,kDAO1C,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACD6B,WAAaL,IAAMwK,YAFT,E,qDAMf,OACI,kBAAC,WAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CAAenC,QAAQ,aAAa3K,KAAM,UACtC,kBAAC,EAAD,CAAWA,KAAK,aAAae,SAAUY,KAAKc,eAGpD,kBAACqK,GAAA,EAAD,KACI,kBAAC,GAAD,CAAenC,QAAQ,YAAY3K,KAAM,YACrC,kBAAC,EAAD,CAAWA,KAAK,iBAI5B,kBAAC6M,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CAAenC,QAAQ,WAAW3K,KAAM,WACpC,kBAAC,EAAD,CAAWA,KAAK,eAGxB,kBAAC8M,GAAA,EAAD,KACI,kBAAC,GAAD,CAAenC,QAAQ,QAAQ3K,KAAM,SACjC,kBAAC,EAAD,CAAWA,KAAK,aAI5B,kBAAC6M,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,CAAenC,QAAQ,WAAW3K,KAAM,iBACpC,kBAAC,EAAD,CAAWA,KAAK,WAAWgB,UAAQ,MAG3C,kBAAC8L,GAAA,EAAD,KACI,kBAAC,GAAD,CAAenC,QAAQ,kBAAkB3K,KAAM,2BAC3C,kBAAC,EAAD,CAAWA,KAAK,kBAAkBgB,UAAQ,Y,GA1C9Ce,cElDxBgL,oBAAU,IAIH,IAAMC,GAAS,CACpBC,MAAO,CAAEjN,KAAM,UAAWkN,UAAW,GAAIC,WAAYC,KCF1CC,GAAgBC,wBAAc,CACzC5J,OAAQ,KACRZ,YAAa,SAACyF,GAAD,OAAQ,MACrBgF,UAAW,SAAChF,EAAIiF,GAAL,OAAe,MAC1BrK,WAAY,SAACoF,GAAD,OAAQ,MACpBoD,SAAU,KACV8B,MAAO,OAGYC,G,kDACnB,WAAY9M,GAAQ,IAAD,8BACjB,cAAMA,IAWR+M,cAAgB,SAACpF,GACb,EAAKqF,UAAS,SAAAC,GAAS,MAAK,CACxBnK,OAAQW,OAAOmE,OAAO,GAAIqF,EAAUnK,OAA5BW,OAAA,IAAAA,CAAA,GAAsCkE,OAAI4B,IAClDsD,MAAOI,EAAUJ,MAAQ,EAAII,EAAUJ,MAAQ,EAAI,OAfxC,EAmBnBK,aAAe,SAACvF,EAAIiF,GAClBrF,QAAQC,IAAI4E,GAAQzE,GACpB,EAAKqF,UAAS,SAAAC,GACZ,IAAI5C,EAAS,CACXvH,OAAQW,OAAOmE,OAAO,GAAIqF,EAAUnK,OAA5BW,OAAA,IAAAA,CAAA,GAAsCkE,GAAK,IACnDkF,MAAOI,EAAUJ,MAAQ,GAK3B,OAHID,IACFvC,EAAOU,SAAWtH,OAAOmE,OAAO,GAAIqF,EAAUlC,SAA5BtH,OAAA,IAAAA,CAAA,GAAwCkE,EAAIiF,KAEzDvC,MA7BQ,EAiCnBnI,YAAc,SAACyF,QACiB4B,IAA1B,EAAK4D,MAAMrK,OAAO6E,GAClB,EAAKoF,cAAcpF,GAEnB,EAAKuF,aAAavF,IArCL,EAyCnBgF,UAAY,SAAChF,EAAIiF,QACerD,IAA1B,EAAK4D,MAAMrK,OAAO6E,IACpB,EAAKuF,aAAavF,EAAIiF,IA3CP,EA+CnBrK,WAAa,SAACoF,QACkB4B,IAA1B,EAAK4D,MAAMrK,OAAO6E,IACpB,EAAKoF,cAAcpF,IAjDJ,EAqDnByF,UAAY,SAAChB,GAsBX,OAAOA,GA3EU,EA8EnBiB,YAAc,SAACjB,GACb,OAAO3I,OAAOuB,KAAKoH,GAAQnH,QAAO,SAACqI,EAAUhJ,GAI3C,OAHAgJ,EAAShJ,GAAO,SAACiJ,GACf,EAAKZ,UAAUrI,EAAK,CAACA,IAAKiJ,EAAEjJ,OAEvBgJ,IACN,KAlFH,EAAKH,MAAQ,CACXrK,OAAQ,GACRZ,YAAa,EAAKA,YAClByK,UAAW,EAAKA,UAChBpK,WAAY,EAAKA,WACjBwI,SAAU,GACV8B,OAAQ,GARO,E,qDAuFT,IACApK,EAAa1B,KAAKf,MAAlByC,SACF+K,EAAYzM,KAAKqM,UAAUhB,IAC3BqB,EAAc1M,KAAKsM,YAAYG,GAErC,OADAjG,QAAQC,IAAIzG,KAAKoM,OAEf,kBAACV,GAAciB,SAAf,CAAwB7M,MAAOE,KAAKoM,OAClC,kBAAC,gBAAD,CAAef,OAAQoB,EAAWF,SAAUG,EAAaE,cAAc,IACtElL,O,GAhGmCtB,aA4HrC,SAASO,GAAU0I,GACtB,8KACe,IAAD,OACN,OACI,kBAACqC,GAAcmB,SAAf,MACG,gBAAE9K,EAAF,EAAEA,OAAQZ,EAAV,EAAUA,YAAayK,EAAvB,EAAuBA,UAAWpK,EAAlC,EAAkCA,WAAYwI,EAA9C,EAA8CA,SAA9C,OACC,kBAACX,EAAD,iBAAsB,EAAKpK,MAA3B,CACE4B,iBAA4C2H,IAA/BzG,EAAO,EAAK9C,MAAMyK,SAC/BvI,YAAa,kBAAMA,EAAY,EAAKlC,MAAMyK,UAC1CkC,UAAWA,EACXpK,WAAY,kBAAMA,EAAW,EAAKvC,MAAMyK,UACxCM,SAAUA,EAAS,EAAK/K,MAAMyK,UAAY,GAC1C7H,WAAYE,EAAO,EAAK9C,MAAMyK,UAAY,YAX5D,GAAqBtJ,a,IAtBEiJ,G,UCxGrByD,G,4MASFC,YAAc,WACVvG,QAAQC,IAAI,SAAU,EAAKxH,MAAMqH,SAAU,EAAKrH,OAChD,EAAKA,MAAM2M,UAAU,EAAK3M,MAAMqH,SAAU,CAACkD,UAAW,SAAUwD,cAAe,EAAK/N,MAAM+N,iB,iEAT3E3L,GAAY,IAAD,EACIrB,KAAKf,MAA3BqC,EADkB,EAClBA,UAAW2L,EADO,EACPA,QACd5L,EAAUC,YAA2B,IAAdA,GAAsB2L,GAC9CA,M,+BASE,IAAD,SAC0BjN,KAAKf,MAA5ByC,EADH,EACGA,SAAUpC,EADb,EACaA,SAClB,OAAIoC,EAEI,kBAAC,WAAD,KACKwL,WAASvI,IAAIjD,GAAU,SAAAyL,GAAK,OAC3BC,uBAAaD,EAAO,CAClB3K,QAASlD,EAAU,KAAO,EAAKyN,kBAMxC,kBAAC,KAAD,CAAMxM,KAAM,GAAI1B,UAAU,iBAAiB2D,QAASlD,EAAW,KAAOU,KAAK+M,YAAaM,MAAO,gB,GA3BtFjN,aA+BTkN,IDyEYjE,GCzEAyD,GD0EvB,uKACe,IAAD,OACN,OACI,kBAACpB,GAAcmB,SAAf,MACG,gBAAE9K,EAAF,EAAEA,OAAQZ,EAAV,EAAUA,YAAayK,EAAvB,EAAuBA,UAAWpK,EAAlC,EAAkCA,WAAYwI,EAA9C,EAA8CA,SAA9C,OACC,kBAACX,GAAD,iBAAsB,EAAKpK,MAA3B,CACE4B,YAAakB,EACbZ,YAAaA,EACbyK,UAAWA,EACXpK,WAAYA,EACZwI,SAAUA,EACVnI,WAAYE,YAX9B,GAAqB3B,cElHlB,SAASmN,GAAOtO,GACnB,OACI,kBAAC,WAAD,KACMyD,OAAOuB,KAAKoH,IAAQ1G,KAAI,SAACpB,GACvB,IAAMiK,EAAQnC,GAAO9H,GAAKiI,WAC1B,OAAO,kBAACgC,EAAD,CAAOjK,IAAKA,EAAKmG,QAASnG,QCelCkK,OAjBf,WAEE,OACE,kBAAC,GAAD,KACE,yBAAK5O,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,GAAD,CAAWyH,SAAU,SACnB,kBAAC/D,EAAA,EAAD,CAAQ/B,MAAO,WAAf,WAEF,kBAAC+M,GAAD,MACA,yBAAK3F,IAAK8F,IAAM7O,UAAU,WAAW8O,IAAI,aCN/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApQ,GACLgI,QAAQhI,MAAMA,EAAMqQ,a,mBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.bd871a3d.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { connect, getIn } from 'formik';\r\nimport classNames from 'classnames'\r\n\r\nconst ErrorMessage = ({name, skipTouch, formik}) => {\r\n    // No debería hacer getIn porque nuestro servidor devuelve un string\r\n    // como key del path ejemplo codes[0].value[0] y no devuelve\r\n    // la estructura anidada correspondiente con un diccionario con un array \r\n    // adentro etc \r\n    const error = formik.errors? formik.errors[name] : \"\";\r\n    const touch = getIn(formik.touched, name);\r\n    if (error && (touch || skipTouch)) {\r\n        return (\r\n            <Fragment> \r\n                <div className={classNames(\"no-form-control\", { 'is-invalid': error})}> </div>\r\n                <div className=\"invalid-feedback\">{error}</div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    return null\r\n};\r\n\r\nexport default connect(ErrorMessage);","import React, { Fragment, Component } from 'react';\r\nimport { connect, Field, getIn } from 'formik';\r\nimport ErrorMessage from '../ErrorMessage'\r\nimport classNames from 'classnames'\r\nimport {InputGroup, InputGroupAddon} from 'reactstrap';\r\n\r\nclass InputText extends Component {\r\n    renderField = () => {\r\n        const {formik, name, isSubmitting, placeholder, innerRef, password,\r\n             disabled, submitOnChnage, prefix, notErrorMessage, className, ...others} = this.props\r\n        const extraCalassNames = className ? className.split(' '): []\r\n        return <Field  \r\n            type={password?\"password\":\"text\"}\r\n            name={name} \r\n            placeholder={placeholder}\r\n            disabled={disabled || formik.isSubmitting}\r\n            innerRef={innerRef}\r\n            className={classNames(\"form-control\", ...extraCalassNames, { 'is-invalid': getIn(formik.errors, name)})}\r\n            value={getIn(formik.values, name) || \"\"}\r\n            {...others}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        const {name, prefix, notErrorMessage} = this.props\r\n        return (\r\n            <Fragment>\r\n                {prefix ? \r\n                    <InputGroup>\r\n                        {this.renderField()}\r\n                        <InputGroupAddon addonType=\"append\">{prefix}</InputGroupAddon>\r\n                        <ErrorMessage name={name} />\r\n                    </InputGroup>\r\n                    : <Fragment>\r\n                        {this.renderField()}\r\n                        {!notErrorMessage && \r\n                            <ErrorMessage name={name}/>\r\n                        }\r\n                    </Fragment>\r\n                    \r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect(InputText);","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n\r\nclass FullSpinner extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='sweet-loading'>\r\n                <ClipLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={60}\r\n                    color={'#FF586B'}\r\n                />\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default FullSpinner;","import React from 'react';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\n\r\nclass InlineSpinner extends React.Component {\r\n    render() {\r\n        return (\r\n            <ClipLoader sizeUnit={\"px\"} size={this.props.size} color={'#780206'} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default InlineSpinner;","import React, { Component, Fragment } from 'react';\r\nimport { Button, ModalHeader, ModalBody, ModalFooter, Form } from 'reactstrap';\r\nimport FullSpinner from \"../components/FullSpinner\";\r\nimport InlineSpinner from \"../components/InlineSpinner\";\r\nimport { Modal } from 'reactstrap';\r\nimport { withModal } from '../contexts/ModalsContext.jsx'\r\nimport ErrorMessage from '../forms/ErrorMessage';\r\n  \r\nclass FormModal extends Component {\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timerId);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { submitted, submitting, isModalOpen, closeModal } = this.props;\r\n      if (prevProps.submitting && submitting === false) {\r\n        this.props.onSubmitted()\r\n      }\r\n      if (!prevProps.submitted && submitted === true) {\r\n        closeModal()\r\n      }\r\n      if (!prevProps.isModalOpen && isModalOpen) {\r\n        this.timerId = setTimeout(this.focus, 500);\r\n      }\r\n    }\r\n\r\n    focus = () => {\r\n      const { isModalOpen, firstInput } = this.props;\r\n      if (firstInput && firstInput.current) {\r\n        firstInput.current.focus()\r\n      } else if (isModalOpen){\r\n        this.timerId = setTimeout(this.focus, 500); // (*)\r\n      }\r\n    }\r\n\r\n    onClose = () => {\r\n      this.props.toggleModal()\r\n      this.props.onClose()\r\n    }\r\n\r\n    render () {\r\n      const {isModalOpen, toggleModal, children, onSubmit, name, loading, modalLevel, dirty} = this.props;\r\n      return (\r\n        <Modal\r\n          size=\"lg\"\r\n          isOpen={isModalOpen}\r\n          toggle={toggleModal}\r\n          fade={false}\r\n          className={modalLevel <= 4 ? `p-${modalLevel}`: \"p-5\"}\r\n          >\r\n            {loading? \r\n              <ModalBody className=\"p-5\"><FullSpinner/></ModalBody>:\r\n              <Fragment>\r\n                <ModalHeader toggle={toggleModal}>{name} \r\n                     \r\n                     <ul className=\"nav list-inline ml-auto float-right\">\r\n                      { dirty && (\r\n                        <li className=\"list-inline-item pl-2 right\"><p className=\"mb-0\"><small><em>({'cambios sin guardar'})</em></small></p></li>\r\n                      )}\r\n                      { this.props.working > 0 && (\r\n                          <li className=\"list-inline-item pl-2\"> <InlineSpinner size={14} /> </li>\r\n                      )}\r\n                    </ul>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={onSubmit}>\r\n                        {children}\r\n                        <input type=\"submit\" className=\"hidden\"/>\r\n                        <ErrorMessage name=\"non_field_errors\" skipTouch={true} />\r\n                    </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" type=\"submit\"\r\n                            onClick={onSubmit}>{'Guardar'}</Button>{' '}\r\n                    <Button color=\"warning\" className=\"text-white\" onClick={this.onClose}>{'Cancelar'}</Button>\r\n                </ModalFooter>\r\n              </Fragment>\r\n            }\r\n        </Modal>\r\n      );\r\n    }\r\n}\r\n\r\nexport default withModal(FormModal);\r\n","var toStr = Object.prototype.toString;\r\nfunction hasOwnProperty(obj, prop) {\r\n  if(obj == null) {\r\n    return false\r\n  }\r\n  //to handle objects with null prototypes (too edge case?)\r\n  return Object.prototype.hasOwnProperty.call(obj, prop)\r\n}\r\n\r\nfunction isEmpty(value){\r\n  if (!value) {\r\n    return true;\r\n  }\r\n  if (isArray(value) && value.length === 0) {\r\n      return true;\r\n  } else if (typeof value !== 'string') {\r\n      for (var i in value) {\r\n          if (hasOwnProperty(value, i)) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction toString(type){\r\n  return toStr.call(type);\r\n}\r\n\r\nfunction isObject(obj){\r\n  return typeof obj === 'object' && toString(obj) === \"[object Object]\";\r\n}\r\n\r\nvar isArray = Array.isArray || function(obj){\r\n  /*istanbul ignore next:cant test*/\r\n  return toStr.call(obj) === '[object Array]';\r\n}\r\n\r\nfunction isBoolean(obj){\r\n  return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\r\n}\r\n\r\nfunction getKey(key){\r\n  if (key.startsWith('[') && key.endsWith(']')) {\r\n    const innerKey = key.slice(1,key.length - 1)\r\n    var intKey = parseInt(innerKey);\r\n    if (intKey.toString() === innerKey) {\r\n      return intKey;\r\n    }\r\n  }\r\n  return key;\r\n}\r\n\r\nfunction factory(options) {\r\n  options = options || {}\r\n\r\n  var objectPath = function(obj) {\r\n    return Object.keys(objectPath).reduce(function(proxy, prop) {\r\n      if(prop === 'create') {\r\n        return proxy;\r\n      }\r\n\r\n      /*istanbul ignore else*/\r\n      if (typeof objectPath[prop] === 'function') {\r\n        proxy[prop] = objectPath[prop].bind(objectPath, obj);\r\n      }\r\n\r\n      return proxy;\r\n    }, {});\r\n  };\r\n\r\n  function hasShallowProperty(obj, prop) {\r\n    return (options.includeInheritedProps || (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop))\r\n  }\r\n\r\n  function getShallowProperty(obj, prop) {\r\n    if (hasShallowProperty(obj, prop)) {\r\n      return obj[prop];\r\n    }\r\n  }\r\n\r\n  function set(obj, path, value, doNotReplace){\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    }\r\n    if (!path || path.length === 0) {\r\n      return obj;\r\n    }\r\n    if (typeof path === 'string') {\r\n      return set(obj, path.split('.').map(getKey), value, doNotReplace);\r\n    }\r\n    var currentPath = path[0];\r\n    var currentValue = getShallowProperty(obj, currentPath);\r\n    if (path.length === 1) {\r\n      if (currentValue === void 0 || !doNotReplace) {\r\n        obj[currentPath] = value;\r\n      }\r\n      return currentValue;\r\n    }\r\n\r\n    if (currentValue === void 0) {\r\n      //check if we assume an array\r\n      if(typeof path[1] === 'number') {\r\n        obj[currentPath] = [];\r\n      } else {\r\n        obj[currentPath] = {};\r\n      }\r\n    }\r\n\r\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\r\n  }\r\n\r\n  objectPath.has = function (obj, path) {\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    } else if (typeof path === 'string') {\r\n      path = path.split('.');\r\n    }\r\n\r\n    if (!path || path.length === 0) {\r\n      return !!obj;\r\n    }\r\n\r\n    for (var i = 0; i < path.length; i++) {\r\n      var j = getKey(path[i]);\r\n\r\n      if((typeof j === 'number' && isArray(obj) && j < obj.length) ||\r\n        (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\r\n        obj = obj[j];\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  objectPath.ensureExists = function (obj, path, value){\r\n    return set(obj, path, value, true);\r\n  };\r\n\r\n  objectPath.set = function (obj, path, value, doNotReplace){\r\n    return set(obj, path, value, doNotReplace);\r\n  };\r\n\r\n  objectPath.insert = function (obj, path, value, at){\r\n    var arr = objectPath.get(obj, path);\r\n    at = ~~at;\r\n    if (!isArray(arr)) {\r\n      arr = [];\r\n      objectPath.set(obj, path, arr);\r\n    }\r\n    arr.splice(at, 0, value);\r\n  };\r\n\r\n  objectPath.empty = function(obj, path) {\r\n    if (isEmpty(path)) {\r\n      return void 0;\r\n    }\r\n    if (obj == null) {\r\n      return void 0;\r\n    }\r\n\r\n    var value, i;\r\n    if (!(value = objectPath.get(obj, path))) {\r\n      return void 0;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      return objectPath.set(obj, path, '');\r\n    } else if (isBoolean(value)) {\r\n      return objectPath.set(obj, path, false);\r\n    } else if (typeof value === 'number') {\r\n      return objectPath.set(obj, path, 0);\r\n    } else if (isArray(value)) {\r\n      value.length = 0;\r\n    } else if (isObject(value)) {\r\n      for (i in value) {\r\n        if (hasShallowProperty(value, i)) {\r\n          delete value[i];\r\n        }\r\n      }\r\n    } else {\r\n      return objectPath.set(obj, path, null);\r\n    }\r\n  };\r\n\r\n  objectPath.push = function (obj, path /*, values */){\r\n    var arr = objectPath.get(obj, path);\r\n    if (!isArray(arr)) {\r\n      arr = [];\r\n      objectPath.set(obj, path, arr);\r\n    }\r\n\r\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\r\n  };\r\n\r\n  objectPath.coalesce = function (obj, paths, defaultValue) {\r\n    var value;\r\n\r\n    for (var i = 0, len = paths.length; i < len; i++) {\r\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\r\n        return value;\r\n      }\r\n    }\r\n\r\n    return defaultValue;\r\n  };\r\n\r\n  objectPath.get = function (obj, path, defaultValue){\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    }\r\n    if (!path || path.length === 0) {\r\n      return obj;\r\n    }\r\n    if (obj == null) {\r\n      return defaultValue;\r\n    }\r\n    if (typeof path === 'string') {\r\n      return objectPath.get(obj, path.split('.'), defaultValue);\r\n    }\r\n\r\n    var currentPath = getKey(path[0]);\r\n    var nextObj = getShallowProperty(obj, currentPath)\r\n    if (nextObj === void 0) {\r\n      return defaultValue;\r\n    }\r\n\r\n    if (path.length === 1) {\r\n      return nextObj;\r\n    }\r\n\r\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\r\n  };\r\n\r\n  objectPath.del = function del(obj, path) {\r\n    if (typeof path === 'number') {\r\n      path = [path];\r\n    }\r\n\r\n    if (obj == null) {\r\n      return obj;\r\n    }\r\n\r\n    if (isEmpty(path)) {\r\n      return obj;\r\n    }\r\n    if(typeof path === 'string') {\r\n      return objectPath.del(obj, path.split('.'));\r\n    }\r\n\r\n    var currentPath = getKey(path[0]);\r\n    if (!hasShallowProperty(obj, currentPath)) {\r\n      return obj;\r\n    }\r\n\r\n    if(path.length === 1) {\r\n      if (isArray(obj)) {\r\n        obj.splice(currentPath, 1);\r\n      } else {\r\n        delete obj[currentPath];\r\n      }\r\n    } else {\r\n      return objectPath.del(obj[currentPath], path.slice(1));\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  return objectPath;\r\n}\r\n\r\nvar mod = factory();\r\nmod.create = factory;\r\nmod.withInheritedProps = factory({includeInheritedProps: true})\r\nexport default mod\r\n","export const GET = 'GET'\r\nexport const CLEAN = 'CLEAN'\r\nexport const CREATE = 'CREATE'\r\nexport const CLONE = 'CLONE'\r\nexport const UPDATE = 'UPDATE'\r\nexport const PATCH = 'PATCH'\r\nexport const DELETE = 'DELETE'\r\nexport const FETCH = 'FETCH'\r\nexport const SEARCH = 'SEARCH'\r\nexport const FILTER = 'FILTER'\r\nexport const SELECT = 'SELECT'\r\n\r\nexport function requestResource(resource, id, path, defaultObj) {\r\n    return {\r\n        type: GET,\r\n        action: GET,\r\n        resource,\r\n        id,\r\n        path,\r\n        defaultObj,\r\n    }\r\n}\r\n\r\nexport function selectResource(resource, id, path, defaultObj) {\r\n    return {\r\n        type: SELECT,\r\n        action: SELECT,\r\n        resource,\r\n        id,\r\n        path,\r\n        defaultObj,\r\n    }\r\n}\r\n\r\nexport function cleanResource(resource, path) {\r\n    return {\r\n        type: CLEAN,\r\n        action: CLEAN,\r\n        resource,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function createResource(resource, body, path) {\r\n    console.log(resource, body, path)\r\n    return {\r\n        type: CREATE,\r\n        action: CREATE,\r\n        resource,\r\n        body,\r\n        path,\r\n    }\r\n}\r\n\r\nexport function cloneResource(resource, body, id) {\r\n    return {\r\n        type: CLONE,\r\n        action: CLONE,\r\n        resource,\r\n        body,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function updateResource(resource, id, body) {\r\n    return {\r\n        type: UPDATE,\r\n        action: UPDATE,\r\n        resource,\r\n        id,\r\n        body\r\n    }\r\n}\r\n\r\nexport function patchResource(resource, id, body) {\r\n    return {\r\n        type: PATCH,\r\n        action: PATCH,\r\n        resource,\r\n        id,\r\n        body\r\n    }\r\n}\r\n\r\nexport function deleteResource(resource, id) {\r\n    return {\r\n        type: DELETE,\r\n        action: DELETE,\r\n        resource,\r\n        id,\r\n    }\r\n}\r\n\r\nexport function searchResources(resource, id, q, offset, limit, order, tempFilters={}) {\r\n    return {\r\n        type: SEARCH,\r\n        action: SEARCH,\r\n        resource,\r\n        id,\r\n        q,\r\n        offset,\r\n        limit,\r\n        order,\r\n        tempFilters\r\n    }\r\n}\r\n\r\nexport function fetchResources(resource, tempFilters={}) {\r\n    return {\r\n        type: FETCH,\r\n        action: FETCH,\r\n        resource,\r\n        tempFilters\r\n    }\r\n}\r\n\r\nexport function updateFilters(resource, id, newFilters) {\r\n    return {\r\n        type: FILTER,\r\n        action: FILTER,\r\n        resource,\r\n        id,\r\n        newFilters,\r\n    }\r\n}\r\n","// import dev from './settings/dev'\r\n// import prod from './settings/prod'\r\n\r\nconst dev = {\r\n    API_URL: process.env.REACT_APP_API_URL,\r\n    SENTRY_DSN: \"\"\r\n}\r\n\r\n//const settings = Object.assign({}, dev, (process.env.NODE_ENV === 'production' || !__DEV__)?prod:dev)\r\nconst settings = Object.assign({}, dev)\r\n\r\nexport default settings\r\n","import isPlainObject from 'is-plain-object'\r\n\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\nfunction isEmpty (value) {\r\n  if (isNumber(value)) {\r\n    return false\r\n  }\r\n  if (!value) {\r\n    return true\r\n  }\r\n  if (isArray(value) && value.length === 0) {\r\n    return true\r\n  } else if (!isString(value)) {\r\n    for (var i in value) {\r\n      if (_hasOwnProperty.call(value, i)) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\n\r\nfunction isNumber (value) {\r\n  return typeof value === 'number'\r\n}\r\n\r\nfunction isString (obj) {\r\n  return typeof obj === 'string'\r\n}\r\n\r\nfunction isArray (obj) {\r\n  return Array.isArray(obj)\r\n}\r\n\r\nfunction assignToObj (target, source) {\r\n  for (var key in source) {\r\n    if (_hasOwnProperty.call(source, key)) {\r\n      target[key] = source[key]\r\n    }\r\n  }\r\n  return target\r\n}\r\n\r\nfunction getKey (key) {\r\n  if (key.startsWith('[') && key.endsWith(']')) {\r\n      const innerKey = key.slice(1,key.length - 1)\r\n      var intKey = parseInt(innerKey);\r\n      if (intKey.toString() === innerKey) {\r\n        return intKey;\r\n      }\r\n    }\r\n    return key;\r\n}\r\n\r\nvar objectPathImmutable = function (src) {\r\n  var dest = src\r\n  var committed = false\r\n\r\n  var transaction = Object.keys(api).reduce(function (proxy, prop) {\r\n    /* istanbul ignore else */\r\n    if (typeof api[prop] === 'function') {\r\n      proxy[prop] = function () {\r\n        var args = [dest, src].concat(Array.prototype.slice.call(arguments))\r\n\r\n        if (committed) {\r\n          throw new Error('Cannot call ' + prop + ' after `value`')\r\n        }\r\n\r\n        dest = api[prop].apply(null, args)\r\n\r\n        return transaction\r\n      }\r\n    }\r\n\r\n    return proxy\r\n  }, {})\r\n\r\n  transaction.value = function () {\r\n    committed = true\r\n    return dest\r\n  }\r\n\r\n  return transaction\r\n}\r\n\r\nfunction clone (obj, createIfEmpty, assumeArray) {\r\n  if (obj == null) {\r\n    if (createIfEmpty) {\r\n      if (assumeArray) {\r\n        return []\r\n      }\r\n\r\n      return {}\r\n    }\r\n\r\n    return obj\r\n  } else if (isArray(obj)) {\r\n    return obj.slice()\r\n  }\r\n\r\n  return assignToObj({}, obj)\r\n}\r\n\r\nfunction deepMerge (dest, src) {\r\n  if (dest !== src && isPlainObject(dest) && isPlainObject(src)) {\r\n    var merged = {}\r\n    for (var key in dest) {\r\n      if (dest.hasOwnProperty(key)) {\r\n        if (src.hasOwnProperty(key)) {\r\n          merged[key] = deepMerge(dest[key], src[key])\r\n        } else {\r\n          merged[key] = dest[key]\r\n        }\r\n      }\r\n    }\r\n\r\n    for (key in src) {\r\n      if (src.hasOwnProperty(key)) {\r\n        merged[key] = deepMerge(dest[key], src[key])\r\n      }\r\n    }\r\n    return merged\r\n  }\r\n  return src\r\n}\r\n\r\nfunction changeImmutable (dest, src, path, changeCallback) {\r\n  if (isNumber(path)) {\r\n    path = [path]\r\n  }\r\n  if (isEmpty(path)) {\r\n    return src\r\n  }\r\n  if (isString(path)) {\r\n    return changeImmutable(dest, src, path.split('.').map(getKey), changeCallback)\r\n  }\r\n  var currentPath = path[0]\r\n\r\n  if (!dest || dest === src) {\r\n    dest = clone(src, true, isNumber(currentPath))\r\n  }\r\n\r\n  if (path.length === 1) {\r\n    return changeCallback(dest, currentPath)\r\n  }\r\n\r\n  if (src != null) {\r\n    src = src[currentPath]\r\n  }\r\n\r\n  dest[currentPath] = changeImmutable(dest[currentPath], src, path.slice(1), changeCallback)\r\n\r\n  return dest\r\n}\r\n\r\nvar api = {}\r\napi.set = function set (dest, src, path, value) {\r\n  if (isEmpty(path)) {\r\n    return value\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    clonedObj[finalPath] = value\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.update = function update (dest, src, path, updater) {\r\n  if (isEmpty(path)) {\r\n    return updater(clone(src))\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    clonedObj[finalPath] = updater(clonedObj[finalPath])\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.push = function push (dest, src, path /*, values */) {\r\n  var values = Array.prototype.slice.call(arguments, 3)\r\n  if (isEmpty(path)) {\r\n    if (!isArray(src)) {\r\n      return values\r\n    } else {\r\n      return src.concat(values)\r\n    }\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    if (!isArray(clonedObj[finalPath])) {\r\n      clonedObj[finalPath] = values\r\n    } else {\r\n      clonedObj[finalPath] = clonedObj[finalPath].concat(values)\r\n    }\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.insert = function insert (dest, src, path, value, at) {\r\n  at = ~~at\r\n  if (isEmpty(path)) {\r\n    if (!isArray(src)) {\r\n      return [value]\r\n    }\r\n\r\n    var first = src.slice(0, at)\r\n    first.push(value)\r\n    return first.concat(src.slice(at))\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    var arr = clonedObj[finalPath]\r\n    if (!isArray(arr)) {\r\n      if (arr != null && typeof arr !== 'undefined') {\r\n        throw new Error('Expected ' + path + 'to be an array. Instead got ' + typeof path)\r\n      }\r\n      arr = []\r\n    }\r\n\r\n    var first = arr.slice(0, at)\r\n    first.push(value)\r\n    clonedObj[finalPath] = first.concat(arr.slice(at))\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.del = function del (dest, src, path) {\r\n  if (isEmpty(path)) {\r\n    return void 0\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    if (Array.isArray(clonedObj)) {\r\n      if (clonedObj[finalPath] !== undefined) {\r\n        clonedObj.splice(finalPath, 1)\r\n      }\r\n    } else {\r\n      if (clonedObj.hasOwnProperty(finalPath)) {\r\n        delete clonedObj[finalPath]\r\n      }\r\n    }\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.assign = function assign (dest, src, path, source) {\r\n  if (isEmpty(path)) {\r\n    if (isEmpty(source)) {\r\n      return src\r\n    }\r\n    return assignToObj(clone(src), source)\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    source = Object(source)\r\n    var target = clone(clonedObj[finalPath], true)\r\n    assignToObj(target, source)\r\n\r\n    clonedObj[finalPath] = target\r\n    return clonedObj\r\n  })\r\n}\r\n\r\napi.merge = function assign (dest, src, path, source) {\r\n  if (isEmpty(path)) {\r\n    if (isEmpty(source)) {\r\n      return src\r\n    }\r\n    return deepMerge(src, source)\r\n  }\r\n  return changeImmutable(dest, src, path, function (clonedObj, finalPath) {\r\n    source = Object(source)\r\n    clonedObj[finalPath] = deepMerge(clonedObj[finalPath], source)\r\n    return clonedObj\r\n  })\r\n}\r\n\r\nconst immutable = Object.keys(api).reduce(function (objectPathImmutable, method) {\r\n  objectPathImmutable[method] = api[method].bind(null, null)\r\n\r\n  return objectPathImmutable\r\n}, objectPathImmutable)\r\n\r\nexport default immutable","import React from 'react';\r\n\r\nconst FormGroup = ({children}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from 'react';\r\nimport FormGroup from './FormGroup'\r\n\r\nconst LabelledGroup = ({htmlFor, name, children}) => {\r\n    return (\r\n        <FormGroup>\r\n            <label htmlFor={htmlFor}>{name}:</label>\r\n            {children}\r\n        </FormGroup>\r\n    )\r\n};\r\n\r\nexport default LabelledGroup;","import React, { Component, Fragment } from 'react';\r\nimport InputText from '../forms/inputs/InputText'\r\nimport { withResourceModal }   from \"../contexts/ResourceModalContext\"\r\nimport LabelledGroup from '../forms/LabelledGroup'\r\nimport objectPath from \"../libs/object-path\";\r\nimport {searchResources} from \"../flows/ResourceFlow\";\r\nimport { connect } from 'react-redux'\r\nimport { Row, Col } from 'reactstrap'\r\nimport * as Yup from 'yup'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    }\r\n}\r\nconst mapPropsToValues = ({obj}) => {\r\n    return {\r\n            username: obj ? obj.username : '',\r\n            first_name: obj ? obj.first_name : '',\r\n            last_name: obj ? obj.last_name : '',\r\n            email: obj ? obj.email : '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            roles: obj && obj.roles ? obj.roles: [],\r\n            is_master: obj? obj.is_master: false,\r\n    }\r\n}\r\n\r\nconst validationSchema = (props) => {\r\n    return Yup.object().shape({\r\n        first_name: Yup.string()\r\n            .required('El nombre es obligatorio'),\r\n        username: Yup.string()\r\n            .required('El usuario es obligatorio'),\r\n        email: Yup.string()\r\n            .required('El email es obligatorio')\r\n            .email('El email ingresado no es válido'),\r\n        password: Yup\r\n            .string()\r\n            .label('Contraseña')\r\n            .min(2, 'Es demasiado corta...'),\r\n        confirmPassword: Yup\r\n            .string()\r\n            .label('Confirmar contraseña')\r\n            .test('passwords-match', 'Las contraseñas no coinciden', function(value) {\r\n              return this.parent.password === value;\r\n            }),\r\n    })\r\n}\r\n\r\nclass UserModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.firstInput = React.createRef();\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"first_name\" name={'Nombre'}>\r\n                            <InputText name=\"first_name\" innerRef={this.firstInput}/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"last_name\" name={'Apellido'}>\r\n                            <InputText name=\"last_name\"/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"username\" name={'Usuario'}>\r\n                            <InputText name=\"username\"/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"email\" name={'Email'}>\r\n                            <InputText name=\"email\"/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"password\" name={'Contraseña'}>\r\n                            <InputText name=\"password\" password/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <LabelledGroup htmlFor=\"confirmPassword\" name={'Confirmar Contraseña'}>\r\n                            <InputText name=\"confirmPassword\" password/>\r\n                        </LabelledGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withResourceModal(\r\n    mapPropsToValues, \r\n    \"Usuario\",\r\n    \"\",\r\n    validationSchema,\r\n    (UserModal)\r\n);\r\n\r\n","import React, { Component } from \"react\";\r\nimport FormModal from '../modals/FormModal'\r\nimport { connect } from 'react-redux'\r\nimport objectPath from '../libs/object-path'\r\nimport { createResource, updateResource } from '../flows/ResourceFlow'\r\nimport { withModal } from '../contexts/ModalsContext.jsx'\r\nimport { withFormik } from 'formik'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let opPath = '';\r\n    let obj = undefined;\r\n    let objLoading = false;\r\n    const operation = ownProps.openData.operation\r\n    switch (operation) {\r\n        case \"create\": \r\n            opPath = 'create';\r\n            break;\r\n        case \"update\":\r\n            opPath = `objects.${ownProps.openData.objId}.${operation}`;\r\n            obj = objectPath.get(state, `${ownProps.modalId}.objects.${ownProps.openData.objId}.body`);\r\n            objLoading = obj === undefined\r\n            break;\r\n        case \"clone\":\r\n            opPath = 'create';\r\n            obj = objectPath.get(state, `${ownProps.modalId}.objects.${ownProps.openData.objId}.body`);\r\n            objLoading = obj === undefined\r\n            break;\r\n        default:\r\n            opPath = '';\r\n            obj = undefined;\r\n            objLoading = false\r\n    }\r\n    return {\r\n        serverErrors: objectPath.get(state, `${ownProps.modalId}.${opPath}.error.errors`, undefined),\r\n        submitting: objectPath.get(state, `${ownProps.modalId}.${opPath}.working`) > 0,\r\n        submitted: objectPath.get(state, `${ownProps.modalId}.${opPath}.done`),\r\n        objLoading: objLoading,\r\n        obj: obj,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        createResource: (body) => dispatch(createResource(ownProps.modalId, body)),\r\n        updateResource: (body, id) => dispatch(updateResource(ownProps.modalId, id, body))\r\n    }\r\n}\r\n\r\nexport function withFormModal(mapPropsToValues, validationSchema, WrappedComponent) {\r\n    const answer = class extends Component {\r\n        onSubmitted = () => {\r\n          const { setSubmitting, setErrors, serverErrors, resetForm} = this.props\r\n          setSubmitting(false); \r\n          if (serverErrors) {\r\n            setErrors(serverErrors)\r\n          } else {\r\n            resetForm()\r\n          }\r\n        }\r\n\r\n        render () {\r\n            return <WrappedComponent \r\n                operation={this.props.openData.operation}\r\n                onSubmitted={this.onSubmitted}\r\n                {...this.props} \r\n            />\r\n        }\r\n    }\r\n    return withModal((withFormik({ \r\n        validationSchema: validationSchema,\r\n        handleSubmit: (values, { isSubmitting, props }) => {\r\n          if (!isSubmitting) {\r\n              const { openData, obj, modalId } = props;\r\n              const operation = openData.operation\r\n              if (operation === 'create' || operation === 'clone') {\r\n                  console.log(\"ENTROO\", createResource)\r\n                    // var url = \"http://localhost:3001/users/\";\r\n                    // var method = \"POST\";\r\n                    // var postData = values;\r\n                    // var shouldBeAsync = true;\r\n                    // var request = new XMLHttpRequest();\r\n                    // request.onload = function () {z\r\n                    //     var status = request.status; // HTTP response status, e.g., 200 for \"200 OK\"\r\n                    //     var data = request.responseText; // Returned data, e.g., an HTML document.\r\n                    // }\r\n                    // request.open(method, url, shouldBeAsync);\r\n\r\n                    // request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n                    // request.send(postData);\r\n                createResource(modalId, values)\r\n              } else if (operation === 'update') {\r\n                updateResource(values, obj.id)\r\n              }\r\n          }\r\n        },\r\n        mapPropsToValues:mapPropsToValues\r\n    })(answer)))\r\n}\r\n\r\nexport function withResourceModal(mapPropsToValues, name, description, validationSchema, WrappedComponent) {\r\n    const answer = class extends Component {\r\n        componentDidUpdate(prevProps) {\r\n            if ( \r\n                (this.props.obj === undefined && prevProps.obj !== undefined) ||\r\n                (this.props.obj !== undefined && prevProps.obj === undefined) || \r\n                (this.props.obj !== undefined && prevProps.obj !== undefined && prevProps.obj.id !== this.props.obj.id ) \r\n            ) {\r\n                this.props.resetForm(mapPropsToValues(this.props))\r\n            }\r\n        }\r\n\r\n        getActionName = (operation) => {\r\n            switch (operation) {\r\n                case 'create':\r\n                    return 'Crear';\r\n                case 'update':\r\n                    return 'Editar';\r\n                case 'clone':\r\n                    return 'Clonar';\r\n                default:\r\n                    return \"\";\r\n\r\n            }\r\n        }\r\n\r\n        render () {\r\n            const { modalId, submitted, dirty, resetForm, submitting, handleSubmit, objLoading, onSubmitted, operation} = this.props\r\n            return (\r\n              <FormModal\r\n                submitted={submitted}\r\n                submitting={submitting}\r\n                modalId={modalId}\r\n                onClose={() => resetForm()}\r\n                dirty={dirty}\r\n                onSubmit={handleSubmit}\r\n                name={`${this.getActionName(operation)} ${name}`}\r\n                loading={objLoading}\r\n                description={description}\r\n                onSubmitted={onSubmitted}\r\n                operation={operation}\r\n              >\r\n                <WrappedComponent\r\n                  {...this.props}\r\n                />\r\n              </FormModal>\r\n            )\r\n        }\r\n    }\r\n    return withFormModal(\r\n        mapPropsToValues,\r\n        validationSchema,\r\n        answer,\r\n    )\r\n}","import {configure} from 'react-hotkeys';\r\nimport UserModal from './UserModal';\r\n\r\nconfigure({\r\n    //logLevel:'verbose'\r\n})\r\n\r\nexport const keyMap = {\r\n  users: { name: 'Usuario', sequences: [], modalClass: UserModal },\r\n};\r\n","\r\nimport React, { Component, createContext } from \"react\";\r\nimport { GlobalHotKeys } from \"react-hotkeys\";\r\nimport { keyMap } from '../modals/keymaps'\r\n\r\n\r\nexport const ModalsContext = createContext({\r\n  isOpen: null,\r\n  toggleModal: (id) => null,\r\n  openModal: (id, data) =>  null,\r\n  closeModal: (id) => null,\r\n  openData: null,\r\n  level: null,\r\n});\r\n\r\nexport default class ModalsProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: {},\r\n      toggleModal: this.toggleModal,\r\n      openModal: this.openModal,\r\n      closeModal: this.closeModal,\r\n      openData: {},\r\n      level: -1,\r\n    };\r\n  }\r\n\r\n  setCloseModal = (id) => {\r\n      this.setState(prevState => ({\r\n          isOpen: Object.assign({}, prevState.isOpen, {[id]:undefined}),\r\n          level: prevState.level > 1 ? prevState.level - 1 : 0\r\n      }));\r\n  }\r\n\r\n  setOpenModal = (id, data) => {\r\n    console.log(keyMap, id)\r\n    this.setState(prevState => {\r\n      let answer = {\r\n        isOpen: Object.assign({}, prevState.isOpen, {[id]: true}),\r\n        level: prevState.level + 1\r\n      }\r\n      if (data) {\r\n        answer.openData = Object.assign({}, prevState.openData, {[id]:data})\r\n      }\r\n      return answer\r\n    })\r\n  }\r\n\r\n  toggleModal = (id) => {\r\n    if (this.state.isOpen[id] !== undefined) {\r\n        this.setCloseModal(id)\r\n    } else {\r\n        this.setOpenModal(id)\r\n    }\r\n  }\r\n\r\n  openModal = (id, data) => {\r\n    if (this.state.isOpen[id] === undefined) {\r\n      this.setOpenModal(id, data)\r\n    }\r\n  }\r\n\r\n  closeModal = (id) => { \r\n    if (this.state.isOpen[id] !== undefined) {\r\n      this.setCloseModal(id)\r\n    }\r\n  }\r\n\r\n  getKeyMap = (keyMap) => {\r\n    // if (this.props.ware_types.length > 0) {\r\n    //     keyMap.wares.sequences = []\r\n    //     this.props.ware_types.forEach((wt) => {\r\n    //         keyMap.wares.sequences.push(\"alt+w \" + wt.shortcut_key)\r\n    //     })\r\n    // }\r\n\r\n    // if (this.props.variant_types.length > 0) {\r\n    //     keyMap.variants.sequences = []\r\n    //     this.props.variant_types.forEach((wt) => {\r\n    //         keyMap.variants.sequences.push(\"alt+v \" + wt.shortcut_key)\r\n    //     })\r\n    // }\r\n\r\n    // if (this.props.lot_types.length > 0) {\r\n    //     keyMap.lots.sequences = []\r\n    //     this.props.lot_types.forEach((wt) => {\r\n    //         keyMap.lots.sequences.push(\"alt+l \" + wt.shortcut_key)\r\n    //     })\r\n    // }\r\n\r\n    return keyMap\r\n  }\r\n\r\n  getHandlers = (keyMap) => {\r\n    return Object.keys(keyMap).reduce((handlers, key) => { \r\n      handlers[key] = (e) => {\r\n        this.openModal(key, {key: e.key})\r\n      }\r\n      return handlers\r\n    }, {})\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const newKeyMap = this.getKeyMap(keyMap)\r\n    const newHandlers = this.getHandlers(newKeyMap)\r\n    console.log(this.state)\r\n    return (\r\n      <ModalsContext.Provider value={this.state}>\r\n        <GlobalHotKeys keyMap={newKeyMap} handlers={newHandlers} allowChanges={true}/>\r\n        {children}\r\n      </ModalsContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport function withModals(WrappedComponent) {\r\n    return class extends Component {\r\n        render () {\r\n            return (\r\n                <ModalsContext.Consumer>\r\n                  {({isOpen, toggleModal, openModal, closeModal, openData }) => (\r\n                    <WrappedComponent {...this.props} \r\n                      isModalOpen={isOpen} \r\n                      toggleModal={toggleModal} \r\n                      openModal={openModal}\r\n                      closeModal={closeModal}\r\n                      openData={openData}\r\n                      modalLevel={isOpen}\r\n                    />\r\n                  )}\r\n                </ModalsContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport function withModal(WrappedComponent) {\r\n    return class extends Component {\r\n        render () {\r\n            return (\r\n                <ModalsContext.Consumer>\r\n                  {({isOpen, toggleModal, openModal, closeModal, openData}) => (\r\n                    <WrappedComponent {...this.props} \r\n                      isModalOpen={isOpen[this.props.modalId] !== undefined} \r\n                      toggleModal={() => toggleModal(this.props.modalId)}\r\n                      openModal={openModal}\r\n                      closeModal={() => closeModal(this.props.modalId)}\r\n                      openData={openData[this.props.modalId] || {}}\r\n                      modalLevel={isOpen[this.props.modalId] || 0}\r\n                    />\r\n                  )}\r\n                </ModalsContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n}","import React, { Component, Children, Fragment, cloneElement } from 'react';\r\nimport {withModals} from \"../contexts/ModalsContext\";\r\nimport objectPath from \"../libs/object-path\";\r\nimport  { Plus } from 'react-feather'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        submitted: objectPath.get(state, `${ownProps.resource}.create.done`),\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {}\r\n}\r\n\r\nclass AddButton extends Component {\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { submitted, onDone } = this.props;\r\n        if (!prevProps.submitted && submitted === true && onDone) {\r\n            onDone()\r\n        }\r\n    }\r\n    \r\n    handleClick = () => {\r\n        console.log(\"ENTROO\", this.props.resource, this.props)\r\n        this.props.openModal(this.props.resource, {operation: 'create', initialValues: this.props.initialValues});\r\n    }\r\n\r\n    render() {\r\n        const { children, disabled } = this.props;\r\n        if (children) {\r\n            return (\r\n                <Fragment>\r\n                    {Children.map(children, child => (\r\n                      cloneElement(child, {\r\n                        onClick: disabled? null : this.handleClick,\r\n                      })))\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n        return <Plus size={24} className=\"ml-2 clickable\" onClick={disabled ? null : this.handleClick} title={'Agregar'}/>\r\n    }\r\n}\r\n\r\nexport default withModals((AddButton));\r\n","import React, { Fragment } from 'react'\r\nimport { keyMap } from './keymaps'\r\n\r\n// para agregaar un nuevo modal al sistema importarlo y agregalo uno abao\r\n// del otro con su id correspondiente.\r\nexport function Modals(props) {\r\n    return (\r\n        <Fragment>\r\n            { Object.keys(keyMap).map((key) => {\r\n                const Modal = keyMap[key].modalClass\r\n                return <Modal key={key} modalId={key}/>\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport AddButton from './components/AddButton';\r\nimport { Button } from 'reactstrap';\r\nimport ModalsProvider from './contexts/ModalsContext';\r\nimport { Modals } from './modals/index'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ModalsProvider>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <AddButton resource={\"users\"}>\r\n            <Button color={\"primary\"}>Prueba</Button>\r\n          </AddButton>\r\n          <Modals/>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n      </div>\r\n    </ModalsProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./index.scss\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}